openapi: 3.1.0
info:
  title: Ecommerce API REST
  version: 1.0.0
  description: API para un sistema ecommerce siguiendo los principos REST
  contact:
    name: Cristian Manuel Herrera Guallo
    email: cristianmherrera21@gmail.com
    url: https://github.com/cris6h16

servers:
  - url: http://localhost:8080
    description: Dev Server

paths:
  /api/v1/auth/signup:
    post:
      operationId: signup
      summary: _Path_ o Ruta para registro de Usuarios
      description: "Ruta para crearse una cuenta de usuario"
      requestBody:
        required: true
        content:
          application/json:
            schema:
            $ref: '#/components/schemas/SignupDTO'
      responses:
        201:
          description: Usuario creado exitosamente
          headers:
            Location:
              description: URL de la nueva cuenta creada
              schema:
                type: string
        400:
          description: Error en los datos enviados
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDTO'
              examples:
                PasswordTooShort:
                  value:
                    message: "La contraseña debe tener al menos 8 caracteres" # todo: coincidir con el mensaje de error
                    code: "USER_PASSWORD_TOO_SHORT" # todo: coincidir con el codigo de error
        409:
          description: Algun atributo unico ya existe o esta en uso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDTO'
              examples:
                EmailAlreadyExists:
                  value:
                    message: "El email ya esta en uso" # todo: coincidir con el mensaje de error
                    code: "USER_EMAIL_ALREADY_EXISTS" # todo: coincidir con el codigo de error

        503:
          description: Error al enviar el correo de verificacion
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDTO'
              examples:
                EmailNotSent:
                value:
                  message: "Error al enviar el correo de verificacion" # todo: coincidir con el mensaje de error
                  code: "EMAIL_NOT_SENT" # todo: coincidir con el codigo de error

        default:
          description: Error inesperado en el servidor
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDTO'
              examples:
                UnexpectedError:
                  value:
                    message: "Error inesperado" # todo: coincidir con el mensaje de error
                    code: "UNEXPECTED_ERROR" # todo: coincidir con el codigo de error

  /api/v1/auth/login:
    post:
      operationId: login
      summary: _Path_ o Ruta para iniciar sesion
      description: "Ruta para iniciar sesion en la aplicacion"
      requestBody:
        required: true
        $ref: '#/components/schemas/LoginDTO'

      responses:
        200:
          description: Usuario autenticado exitosamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RefreshAccessTokenDTO'

        400:
          description: Propiedades enviadas incorrectas ( solicitud no procesada )
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDTO'
              examples:
                InvalidCredentials:
                  value:
                    message: "Email invalido" # todo: coincidir con el mensaje de error
                    code: "EMAIL_REGEX_MISSMATCH" # todo: coincidir con el codigo de error
        401:
          description: Credenciales incorrectas
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDTO'
              examples:
                InvalidCredentials:
                  value:
                    message: "Credenciales incorrectas" # todo: coincidir con el mensaje de error
                    code: "INVALID_CREDENTIALS" # todo: coincidir con el codigo de error

        default:
          description: Error inesperado en el servidor
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDTO'
              examples:
                UnexpectedError:
                  value:
                    message: "Error inesperado" # todo: coincidir con el mensaje de error
                    code: "UNEXPECTED_ERROR" # todo: coincidir con el codigo de error

  /api/v1/auth/refresh-token:
      post:
        operationId: refreshToken
        summary: _Path_ o Ruta para refrescar el token de acceso
        description: "Ruta para refrescar el token de acceso"
        responses:
          200:
              description: accessToken refrescado exitosamente
              content:
                application/json:
                    schema:
                    $ref: '#/components/schemas/AccessTokenDTO'
          401:
              description: refreshToken no valido ( no se pudo autenticar la petición )

          403:
              description: Permisos insuficientes ( no tiene el rol de usuario )

          default:
              description: Error inesperado en el servidor
              content:
              application/json:
                  schema:
                  $ref: '#/components/schemas/ErrorResponseDTO'
                  examples:
                  UnexpectedError:
                      value:
                      message: "Error inesperado" # todo: coincidir con el mensaje de error
                      code: "UNEXPECTED_ERROR" # todo: coincidir con el codigo de error

components:
  schemas:

    LoginDTO:
      type: object
      properties:
        email:
          type: string
          format: email
        password:
          type: string
          format: password

    RefreshAccessTokenDTO:
      type: object
      properties:
        accessToken:
          type: string
        refreshToken:
          type: string

    AccessTokenDTO:
      type: object
      properties:
          accessToken:
          type: string

    SignupDTO:
      type: object
      properties:
        firstname:
          type: string
        lastname:
          type: string
        email:
          type: string
          format: email
        password:
          type: string
          format: password

    ErrorResponseDTO:
      type: object
      properties:
        message:
          type: string
        code:
          type: string




