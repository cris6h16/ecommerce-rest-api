openapi: 3.1.0
info:
  title: Ecommerce API
  version: 1.0.0
  description: API para un sistema ecommerce siguiendo los principos REST
#  contact:
#    name: Cristian Manuel Herrera Guallo
#    email: cristianmherrera21@gmail.com
#    url: https://github.com/cris6h16

servers:
  - url: http://192.168.100.135:8080
    description: Prod Server

paths:
  /api/v1/auth/signup:
    post:
      operationId: signup
      summary: _Path_ o Ruta para registro de Usuarios
      description: Ruta para crearse una cuenta de usuario
      requestBody:
        $ref: '#/components/requestBodies/Signup'

      responses:
        201:
          description: Usuario creado exitosamente
          headers:
            Location:
              description: URL de la nueva cuenta creada
              schema:
                type: string

        400:
          description: Error en los datos de entrada enviados
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDTO'
              examples:
                PasswordTooShort:
                  value:
                    message: "La contraseña debe contener entre 8 y 80 caracteres"
                FirstnameLengthMismatch:
                  value:
                    message: "El primer apellido debe contener entre 1 y 30 caracteres"
                EmailRegexMismatch:
                  value:
                    message: "El correo electrónico ingresado no tiene el formato correcto"

        409:
          description: Algun atributo unico ya existe o esta en uso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDTO'
              examples:
                EmailAlreadyExists:
                  value:
                    message: "El email ya está registrado"


        default:
          $ref: '#/components/responses/UnexpectedError'

  /api/v1/auth/login:
    post:
      operationId: Login
      summary: _Path_ o Ruta para iniciar sesion
      description: "Ruta para iniciar sesion en la aplicacion"
      requestBody:
        $ref: '#/components/requestBodies/Login'

      responses:
        200:
          description: Usuario autenticado exitosamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoginOutput'

        400:
          description: Error en los datos de entrada enviados
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDTO'
              examples:
                EmailRegexMismatch:
                  value:
                    message: "El correo electrónico ingresado no tiene el formato correcto"
        401:
          description: Credenciales incorrectas
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDTO'
              examples:
                InvalidCredentials:
                  value:
                    message: "Credenciales incorrectas"

        default:
          $ref: '#/components/responses/UnexpectedError'

  /api/v1/email/send-email-verification:
    post:
      summary: _Path_ o Ruta para enviar correo de verificacion
      description: Ruta para enviar codigos de verificacion a los correos de los usuarios registrados
      requestBody:
        $ref: '#/components/schemas/SendEmailVerification'
      responses:
        204:
          description: Correo de verificacion enviado exitosamente (si el correo no esta registrado, no se envia nada y se responde con 204)

        400:
          description: Error en los datos de entrada enviados
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDTO'
              examples:
                InvalidActionType:
                  value:
                    message: "El tipo de acción no es soportado"
                EmailRegexMismatch:
                  value:
                    message: "El correo electrónico ingresado no tiene el formato correcto"
        default:
          $ref: '#/components/responses/UnexpectedError'






  /api/v1/auth/refresh-token:
    post:
      operationId: refreshToken
      summary: _Path_ o Ruta para refrescar el token de acceso
      description: "Ruta para refrescar el token de acceso"
      responses:
        200:
          description: accessToken refrescado exitosamente
          content:
            application/json:
              schema:
              $ref: '#/components/schemas/AccessTokenDTO'
        401:
          description: refreshToken no valido ( no se pudo autenticar la petición )

        403:
          description: Permisos insuficientes ( no tiene el rol de usuario )

        default:
          description: Error inesperado en el servidor
          content:
          application/json:
            schema:
            $ref: '#/components/schemas/ErrorResponseDTO'
            examples:
            UnexpectedError:
              value:
              message: "Error inesperado" # todo: coincidir con el mensaje de error
              code: "UNEXPECTED_ERROR" # todo: coincidir con el codigo de error

components:

  responses:
    UnexpectedError:
      description: 500 - Error inesperado en el servidor
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponseDTO'
          examples:
            UnexpectedError:
              value:
                message: "Ha ocurrido un error inesperado"

  schemas:

    LoginDTO:
      type: object
      properties:
        email:
          type: string
          format: email
        password:
          type: string
          format: password

    LoginOutput:
      type: object
      properties:
        accessToken:
          type: string
        refreshToken:
          type: string

    AccessTokenDTO:
      type: object
      properties:
        accessToken:
        type: string

    SignupDTO:
      type: object
      properties:
        firstname:
          type: string
        lastname:
          type: string
        email:
          type: string
          format: email
        password:
          type: string
          format: password

    ErrorResponseDTO:
      type: object
      properties:
        message:
          type: string

    SendEmailVerification:
      type: object
      properties:
        email:
          type: string
          format: email
        actionType:
          type: string
          enum: [ "RESET_PASSWORD", "VERIFY_EMAIL" ]


  requestBodies:
    Signup:
      required: true
      content:
        application/json:
          schema:
          $ref: '#/components/schemas/SignupDTO'

    Login:
      required: true
      content:
        application/json:
        schema:
        $ref: '#/components/schemas/LoginDTO'