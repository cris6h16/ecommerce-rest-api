{
	"info": {
		"_postman_id": "f05123ce-0eb1-461d-8ed2-3925bddd1aa0",
		"name": "Ecommerce-FINAL Copy 9",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "29096460"
	},
	"item": [
		{
			"name": "Inicio de Sesion",
			"item": [
				{
					"name": "TF001 - Exitoso",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"El header Content-Type es 'application/json'\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\", \"application/json\");\r",
									"});\r",
									"\r",
									"pm.test(\"El token de Refresco tiene al menos 10 caracteres\", function () {\r",
									"    let refreshToken = pm.response.json().refreshToken;\r",
									"    pm.expect(refreshToken.length).to.be.at.least(10);\r",
									"});\r",
									"\r",
									"pm.test(\"El token de Acceso tiene al menos 10 caracteres\", function () {\r",
									"    let accessToken = pm.response.json().accessToken;\r",
									"    pm.expect(accessToken.length).to.be.at.least(10);\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"Status es 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\": \"uhabilitado@gmail.com\",\r\n    \"password\": \"12345678\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{hostURL}}/api/v1/auth/login",
							"host": [
								"{{hostURL}}"
							],
							"path": [
								"api",
								"v1",
								"auth",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "TF002 - Correo Electronico Invalido",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const msg = \"El correo electr√≥nico ingresado no tiene el formato correcto\";\r",
									"\r",
									"pm.test(\"El header Content-Type es 'application/json'\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\", \"application/json\");\r",
									"});\r",
									"\r",
									"pm.test(\"Status es 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(`Mensaje de error en el cuerpo de la respuesta es: ${msg}`, function () {\r",
									"    pm.expect(pm.response.json().message).eqls(msg);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\": \"uhabilitado@gm ail.com\",\r\n    \"password\": \"12345678\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{hostURL}}/api/v1/auth/login",
							"host": [
								"{{hostURL}}"
							],
							"path": [
								"api",
								"v1",
								"auth",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "TF003 - Usuario No Encontrado",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const msg = \"Credenciales incorrectas\";\r",
									"\r",
									"pm.test(\"Status es 403\", function () {\r",
									"    pm.response.to.have.status(403);\r",
									"});\r",
									"\r",
									"pm.test(\"El header Content-Type es 'application/json'\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\", \"application/json\");\r",
									"});\r",
									"\r",
									"pm.test(`Mensaje de error en el cuerpo de la respuesta es: ${msg}`, function () {\r",
									"    pm.expect(pm.response.json().message).eqls(msg);\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\": \"noregistrado@gmail.com\",\r\n    \"password\": \"12345678\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{hostURL}}/api/v1/auth/login",
							"host": [
								"{{hostURL}}"
							],
							"path": [
								"api",
								"v1",
								"auth",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "TF004 - Usuario Deshabilitado",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const msg = \"Credenciales incorrectas\";\r",
									"\r",
									"pm.test(\"Status es 403\", function () {\r",
									"    pm.response.to.have.status(403);\r",
									"});\r",
									"\r",
									"pm.test(\"El header Content-Type es 'application/json'\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\", \"application/json\");\r",
									"});\r",
									"\r",
									"pm.test(`Mensaje de error en el cuerpo de la respuesta es: ${msg}`, function () {\r",
									"    pm.expect(pm.response.json().message).eqls(msg);\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\": \"deshabilitado@gmail.com\",\r\n    \"password\": \"12345678\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{hostURL}}/api/v1/auth/login",
							"host": [
								"{{hostURL}}"
							],
							"path": [
								"api",
								"v1",
								"auth",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "TF005 - Contrasena Incorrecta",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const msg = \"Credenciales incorrectas\";\r",
									"\r",
									"pm.test(\"Status es 403\", function () {\r",
									"    pm.response.to.have.status(403);\r",
									"});\r",
									"\r",
									"pm.test(\"El header Content-Type es 'application/json'\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\", \"application/json\");\r",
									"});\r",
									"\r",
									"pm.test(`Mensaje de error en el cuerpo de la respuesta es: ${msg}`, function () {\r",
									"    pm.expect(pm.response.json().message).eqls(msg);\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\": \"existente@gmail.com\",\r\n    \"password\": \"esta-es-una-contrasena-invalida\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{hostURL}}/api/v1/auth/login",
							"host": [
								"{{hostURL}}"
							],
							"path": [
								"api",
								"v1",
								"auth",
								"login"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Creacion de Cuenta",
			"item": [
				{
					"name": "TF006 - Exitoso",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status es 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									"\r",
									"const location = pm.response.headers.get(\"Location\");\r",
									"pm.test(`Location header correcto: ${location}`, function () {\r",
									"    pm.expect(location).to.match(/^https?:\\/\\/.+\\/api\\/v1\\/users\\/\\d+$/);\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const url = pm.environment.get(\"hostURL\");\r",
									"\r",
									"pm.sendRequest({\r",
									"    url: `${url}/api/v1/tests/reset-functional-testing-db`,\r",
									"    method: 'GET',\r",
									"    header: {\r",
									"        'Content-Type': 'application/json'\r",
									"    },\r",
									"    body: {\r",
									"        mode: 'raw',\r",
									"        raw: JSON.stringify({}) \r",
									"    }\r",
									"}, function (err, res) {\r",
									"    pm.test(\"Reseteo de BD es 204\", function () {\r",
									"        pm.expect(res).to.have.status(204);\r",
									"    });\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"firstname\": \"Cristian\",\r\n    \"lastname\": \"Herrera\",\r\n    \"email\": \"cristianh9073@gmail.com\",\r\n    \"password\": \"12345678\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{hostURL}}/api/v1/auth/signup",
							"host": [
								"{{hostURL}}"
							],
							"path": [
								"api",
								"v1",
								"auth",
								"signup"
							]
						}
					},
					"response": []
				},
				{
					"name": "TF007 - Nombre Invalido",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const msg = \"El nombre debe contener entre 1 y 30 caracteres\";\r",
									"\r",
									"pm.test(\"El header Content-Type es 'application/json'\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\", \"application/json\");\r",
									"});\r",
									"\r",
									"pm.test(`Mensaje de error en el cuerpo de la respuesta es: ${msg}`, function () {\r",
									"    pm.expect(pm.response.json().message).eqls(msg);\r",
									"});\r",
									"\r",
									"pm.test(\"Status es 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"firstname\": \"\",\r\n    \"lastname\": \"Herrera\",\r\n    \"email\": \"{{$randomEmail}}\",\r\n    \"password\": \"12345678\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{hostURL}}/api/v1/auth/signup",
							"host": [
								"{{hostURL}}"
							],
							"path": [
								"api",
								"v1",
								"auth",
								"signup"
							]
						}
					},
					"response": []
				},
				{
					"name": "TF008 - Apellido Invalido",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const msg = \"El apellido debe contener entre 1 y 30 caracteres\";\r",
									"\r",
									"pm.test(\"El header Content-Type es 'application/json'\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\", \"application/json\");\r",
									"});\r",
									"\r",
									"pm.test(\"Status es 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(`Mensaje de error en el cuerpo de la respuesta es: ${msg}`, function () {\r",
									"    pm.expect(pm.response.json().message).eqls(msg);\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"firstname\": \"Cristian\",\r\n    \"lastname\": \"  \",\r\n    \"email\": \"{{$randomEmail}}\",\r\n    \"password\": \"12345678\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{hostURL}}/api/v1/auth/signup",
							"host": [
								"{{hostURL}}"
							],
							"path": [
								"api",
								"v1",
								"auth",
								"signup"
							]
						}
					},
					"response": []
				},
				{
					"name": "TF009 - Correo Electronico Invalido",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const msg = \"El correo electr√≥nico ingresado no tiene el formato correcto\";\r",
									"\r",
									"pm.test(\"El header Content-Type es 'application/json'\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\", \"application/json\");\r",
									"});\r",
									"\r",
									"pm.test(\"Status es 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(`Mensaje de error en el cuerpo de la respuesta es: ${msg}`, function () {\r",
									"    pm.expect(pm.response.json().message).eqls(msg);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"firstname\": \"Cristian\",\r\n    \"lastname\": \"Herrera\",\r\n    \"email\": \"este-es-un-correo@invalido\",\r\n    \"password\": \"12345678\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{hostURL}}/api/v1/auth/signup",
							"host": [
								"{{hostURL}}"
							],
							"path": [
								"api",
								"v1",
								"auth",
								"signup"
							]
						}
					},
					"response": []
				},
				{
					"name": "TF010 - Contrase√±a Invalida",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const msg = \"La contrase√±a debe contener entre 8 y 80 caracteres\";\r",
									"\r",
									"pm.test(\"Status es 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"El header Content-Type es 'application/json'\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\", \"application/json\");\r",
									"});\r",
									"\r",
									"pm.test(`Mensaje de error en el cuerpo de la respuesta es: ${msg}`, function () {\r",
									"    pm.expect(pm.response.json().message).eqls(msg);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"firstname\": \"Cristian\",\r\n    \"lastname\": \"Herrera\",\r\n    \"email\": \"{{$randomEmail}}\",\r\n    \"password\": \"1234567\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{hostURL}}/api/v1/auth/signup",
							"host": [
								"{{hostURL}}"
							],
							"path": [
								"api",
								"v1",
								"auth",
								"signup"
							]
						}
					},
					"response": []
				},
				{
					"name": "TF011 - Correo Electronico Ya Registrado",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const msg = \"El correo electr√≥nico ya est√° en uso\";\r",
									"\r",
									"pm.test(\"El header Content-Type es 'application/json'\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\", \"application/json\");\r",
									"});\r",
									"\r",
									"pm.test(\"Status es 409\", function () {\r",
									"    pm.response.to.have.status(409);\r",
									"});\r",
									"\r",
									"pm.test(`Mensaje de error en el cuerpo de la respuesta es: ${msg}`, function () {\r",
									"    pm.expect(pm.response.json().message).eqls(msg);\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"firstname\": \"Cristian\",\r\n    \"lastname\": \"Herrera\",\r\n    \"email\": \"uhabilitado@gmail.com\",\r\n    \"password\": \"12345678\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{hostURL}}/api/v1/auth/signup",
							"host": [
								"{{hostURL}}"
							],
							"path": [
								"api",
								"v1",
								"auth",
								"signup"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Solicitar C√≥digo al Email",
			"item": [
				{
					"name": "TF012 - Exitoso",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status es 204\", function () {\r",
									"    pm.response.to.have.status(204);\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\": \"uhabilitado@gmail.com\",\r\n    \"actionType\": \"RESET_PASSWORD\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{hostURL}}/api/v1/emails/send-email-verification",
							"host": [
								"{{hostURL}}"
							],
							"path": [
								"api",
								"v1",
								"emails",
								"send-email-verification"
							]
						}
					},
					"response": []
				},
				{
					"name": "TF013 - Correo Electronico Invalido",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const msg = \"El correo electr√≥nico ingresado no tiene el formato correcto\";\r",
									"\r",
									"pm.test(\"Status es 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"El header Content-Type es 'application/json'\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\", \"application/json\");\r",
									"});\r",
									"\r",
									"pm.test(`Mensaje de error en el cuerpo de la respuesta es: ${msg}`, function () {\r",
									"    pm.expect(pm.response.json().message).eqls(msg);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\": \"email invalido@gmail.com\",\r\n    \"actionType\": \"RESET_PASSWORD\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{hostURL}}/api/v1/emails/send-email-verification",
							"host": [
								"{{hostURL}}"
							],
							"path": [
								"api",
								"v1",
								"emails",
								"send-email-verification"
							]
						}
					},
					"response": []
				},
				{
					"name": "TF014 - Accion Invalida",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const msg = \"El tipo de acci√≥n no es soportado\";\r",
									"\r",
									"pm.test(\"Status es 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"El header Content-Type es 'application/json'\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\", \"application/json\");\r",
									"});\r",
									"\r",
									"pm.test(`Mensaje de error en el cuerpo de la respuesta es: ${msg}`, function () {\r",
									"    pm.expect(pm.response.json().message).eqls(msg);\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\": \"existente@gmail.com\",\r\n    \"actionType\": \"ACCION_INVALIDA\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{hostURL}}/api/v1/emails/send-email-verification",
							"host": [
								"{{hostURL}}"
							],
							"path": [
								"api",
								"v1",
								"emails",
								"send-email-verification"
							]
						}
					},
					"response": []
				},
				{
					"name": "TF015 - Correo Electronico No Registrado",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status es 204\", function () {\r",
									"    pm.response.to.have.status(204);\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\": \"noregistrado@gmail.com\",\r\n    \"actionType\": \"RESET_PASSWORD\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{hostURL}}/api/v1/emails/send-email-verification",
							"host": [
								"{{hostURL}}"
							],
							"path": [
								"api",
								"v1",
								"emails",
								"send-email-verification"
							]
						}
					},
					"response": []
				},
				{
					"name": "TF016 - Usuario Deshabilitado",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status es 204\", function () {\r",
									"    pm.response.to.have.status(204);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\": \"vdeshabilitado@gmail.com\",\r\n    \"actionType\": \"RESET_PASSWORD\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{hostURL}}/api/v1/emails/send-email-verification",
							"host": [
								"{{hostURL}}"
							],
							"path": [
								"api",
								"v1",
								"emails",
								"send-email-verification"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Verificar Email",
			"item": [
				{
					"name": "TF017 - Exitoso",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status es 204\", function () {\r",
									"    pm.response.to.have.status(204);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const url = pm.environment.get(\"hostURL\");\r",
									"\r",
									"pm.sendRequest({\r",
									"    url: `${url}/api/v1/tests/reset-functional-testing-db`,\r",
									"    method: 'GET',\r",
									"    header: {\r",
									"        'Content-Type': 'application/json'\r",
									"    },\r",
									"    body: {\r",
									"        mode: 'raw',\r",
									"        raw: JSON.stringify({}) \r",
									"    }\r",
									"}, function (err, res) {\r",
									"    pm.test(\"Reseteo de BD es 204\", function () {\r",
									"        pm.expect(res).to.have.status(204);\r",
									"    });\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\": \"vhabilitado1@gmail.com\",\r\n    \"code\": \"ZJM307\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{hostURL}}/api/v1/users/verify-email",
							"host": [
								"{{hostURL}}"
							],
							"path": [
								"api",
								"v1",
								"users",
								"verify-email"
							]
						}
					},
					"response": []
				},
				{
					"name": "TF018 - Correo Electronico Invalido",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const msg = \"El correo electr√≥nico ingresado no tiene el formato correcto\";\r",
									"\r",
									"pm.test(\"El header Content-Type es 'application/json'\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\", \"application/json\");\r",
									"});\r",
									"\r",
									"pm.test(\"Estado de la respuesta es 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(`Mensaje de error en el cuerpo de la respuesta es: ${msg}`, function () {\r",
									"    pm.expect(pm.response.json().message).eqls(msg);\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\": \"email@invalidocom\",\r\n    \"code\": \"ZJM307\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{hostURL}}/api/v1/users/verify-email",
							"host": [
								"{{hostURL}}"
							],
							"path": [
								"api",
								"v1",
								"users",
								"verify-email"
							]
						}
					},
					"response": []
				},
				{
					"name": "TF019 - Codigo Invalido",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const msg = \"El c√≥digo de verificaci√≥n no cumple con el formato esperado\";\r",
									"\r",
									"pm.test(\"El header Content-Type es 'application/json'\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\", \"application/json\");\r",
									"});\r",
									"\r",
									"pm.test(\"Estado de la respuesta es 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(`Mensaje de error en el cuerpo de la respuesta es: ${msg}`, function () {\r",
									"    pm.expect(pm.response.json().message).eqls(msg);\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\": \"vhabilitado1@gmail.com\",\r\n    \"code\": \"ZJ307\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{hostURL}}/api/v1/users/verify-email",
							"host": [
								"{{hostURL}}"
							],
							"path": [
								"api",
								"v1",
								"users",
								"verify-email"
							]
						}
					},
					"response": []
				},
				{
					"name": "TF020 - Usuario no Existe",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const msg = \"El c√≥digo de verificaci√≥n no es v√°lido o ya ha sido utilizado\";\r",
									"\r",
									"pm.test(\"El header Content-Type es 'application/json'\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\", \"application/json\");\r",
									"});\r",
									"\r",
									"pm.test(\"Estado de la respuesta es 403\", function () {\r",
									"    pm.response.to.have.status(403);\r",
									"});\r",
									"\r",
									"pm.test(`Mensaje de error en el cuerpo de la respuesta es: ${msg}`, function () {\r",
									"    pm.expect(pm.response.json().message).eqls(msg);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\": \"noregistrado@gmail.com\",\r\n    \"code\": \"ZJM307\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{hostURL}}/api/v1/users/verify-email",
							"host": [
								"{{hostURL}}"
							],
							"path": [
								"api",
								"v1",
								"users",
								"verify-email"
							]
						}
					},
					"response": []
				},
				{
					"name": "TF021 - Usuario no Habilitado",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const msg = \"El c√≥digo de verificaci√≥n no es v√°lido o ya ha sido utilizado\";\r",
									"\r",
									"pm.test(\"El header Content-Type es 'application/json'\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\", \"application/json\");\r",
									"});\r",
									"\r",
									"pm.test(\"Estado de la respuesta es 403\", function () {\r",
									"    pm.response.to.have.status(403);\r",
									"});\r",
									"\r",
									"pm.test(`Mensaje de error en el cuerpo de la respuesta es: ${msg}`, function () {\r",
									"    pm.expect(pm.response.json().message).eqls(msg);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\": \"vdeshabilitado@gmail.com\",\r\n    \"code\": \"A1T184\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{hostURL}}/api/v1/users/verify-email",
							"host": [
								"{{hostURL}}"
							],
							"path": [
								"api",
								"v1",
								"users",
								"verify-email"
							]
						}
					},
					"response": []
				},
				{
					"name": "TF022 - Codigo no Asociado Al Correo",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const msg = \"El c√≥digo de verificaci√≥n no es v√°lido o ya ha sido utilizado\";\r",
									"\r",
									"pm.test(\"El header Content-Type es 'application/json'\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\", \"application/json\");\r",
									"});\r",
									"\r",
									"pm.test(\"Estado de la respuesta es 403\", function () {\r",
									"    pm.response.to.have.status(403);\r",
									"});\r",
									"\r",
									"pm.test(`Mensaje de error en el cuerpo de la respuesta es: ${msg}`, function () {\r",
									"    pm.expect(pm.response.json().message).eqls(msg);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\": \"uhabilitado@gmail.com\",\r\n    \"code\": \"ZJM307\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{hostURL}}/api/v1/users/verify-email",
							"host": [
								"{{hostURL}}"
							],
							"path": [
								"api",
								"v1",
								"users",
								"verify-email"
							]
						}
					},
					"response": []
				},
				{
					"name": "TF023 - C√≥digo Ya Usado",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const msg = \"El c√≥digo de verificaci√≥n no es v√°lido o ya ha sido utilizado\";\r",
									"\r",
									"pm.test(\"El header Content-Type es 'application/json'\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\", \"application/json\");\r",
									"});\r",
									"\r",
									"pm.test(\"Estado de la respuesta es 403\", function () {\r",
									"    pm.response.to.have.status(403);\r",
									"});\r",
									"\r",
									"pm.test(`Mensaje de error en el cuerpo de la respuesta es: ${msg}`, function () {\r",
									"    pm.expect(pm.response.json().message).eqls(msg);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\": \"vhabilitado1@gmail.com\",\r\n    \"code\": \"FLAU5C\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{hostURL}}/api/v1/users/verify-email",
							"host": [
								"{{hostURL}}"
							],
							"path": [
								"api",
								"v1",
								"users",
								"verify-email"
							]
						}
					},
					"response": []
				},
				{
					"name": "TF024 - C√≥digo Expirado",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const msg = \"El c√≥digo de verificaci√≥n no es v√°lido o ya ha sido utilizado\";\r",
									"\r",
									"pm.test(\"El header Content-Type es 'application/json'\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\", \"application/json\");\r",
									"});\r",
									"\r",
									"pm.test(\"Estado de la respuesta es 403\", function () {\r",
									"    pm.response.to.have.status(403);\r",
									"});\r",
									"\r",
									"pm.test(`Mensaje de error en el cuerpo de la respuesta es: ${msg}`, function () {\r",
									"    pm.expect(pm.response.json().message).eqls(msg);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\": \"vhabilitado1@gmail.com\",\r\n    \"code\": \"4A5C1V\" \r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{hostURL}}/api/v1/users/verify-email",
							"host": [
								"{{hostURL}}"
							],
							"path": [
								"api",
								"v1",
								"users",
								"verify-email"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Restablecer Contrasena",
			"item": [
				{
					"name": "TF025 - Exitoso",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const url = pm.environment.get(\"hostURL\");\r",
									"\r",
									"pm.sendRequest({\r",
									"    url: `${url}/api/v1/tests/reset-functional-testing-db`,\r",
									"    method: 'GET',\r",
									"    header: {\r",
									"        'Content-Type': 'application/json'\r",
									"    },\r",
									"    body: {\r",
									"        mode: 'raw',\r",
									"        raw: JSON.stringify({}) \r",
									"    }\r",
									"}, function (err, res) {\r",
									"    pm.test(\"PRE: ResetDB es 204\", function () {\r",
									"        pm.expect(res).to.have.status(204);\r",
									"    });\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Estado es 204\", function () {\r",
									"    pm.response.to.have.status(204);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\": \"vhabilitado1@gmail.com\",\r\n    \"code\": \"APC75X\",\r\n    \"password\": \"12345678\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{hostURL}}/api/v1/auth/reset-password",
							"host": [
								"{{hostURL}}"
							],
							"path": [
								"api",
								"v1",
								"auth",
								"reset-password"
							]
						}
					},
					"response": []
				},
				{
					"name": "TF026 - Correo Electronico Invalido",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"const msg = \"El correo electr√≥nico ingresado no tiene el formato correcto\";\r",
									"\r",
									"pm.test(\"El header Content-Type es 'application/json'\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\", \"application/json\");\r",
									"});\r",
									"\r",
									"pm.test(\"Status es 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(`Mensaje de error en el cuerpo de la respuesta es: ${msg}`, function () {\r",
									"    pm.expect(pm.response.json().message).eqls(msg);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\": \"@emailinvalido.com\",\r\n    \"code\": \"04S8R5\",\r\n    \"password\": \"12345678\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{hostURL}}/api/v1/auth/reset-password",
							"host": [
								"{{hostURL}}"
							],
							"path": [
								"api",
								"v1",
								"auth",
								"reset-password"
							]
						}
					},
					"response": []
				},
				{
					"name": "TF027 - Contrasena Invalida",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"const msg = \"La contrase√±a debe contener entre 8 y 80 caracteres\";\r",
									"\r",
									"pm.test(\"El header Content-Type es 'application/json'\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\", \"application/json\");\r",
									"});\r",
									"\r",
									"pm.test(\"Estado de la respuesta es 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(`Mensaje de error en el cuerpo de la respuesta es: ${msg}`, function () {\r",
									"    pm.expect(pm.response.json().message).eqls(msg);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\": \"vhabilitado1@gmail.com\",\r\n    \"code\": \"APC75X\",\r\n    \"password\": \"1234567\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{hostURL}}/api/v1/auth/reset-password",
							"host": [
								"{{hostURL}}"
							],
							"path": [
								"api",
								"v1",
								"auth",
								"reset-password"
							]
						}
					},
					"response": []
				},
				{
					"name": "TF028 - Codigo Invalido",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"const msg = \"El c√≥digo de verificaci√≥n no cumple con el formato esperado\";\r",
									"\r",
									"pm.test(\"El header Content-Type es 'application/json'\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\", \"application/json\");\r",
									"});\r",
									"\r",
									"pm.test(\"Estado de la respuesta es 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(`Mensaje de error en el cuerpo de la respuesta es: ${msg}`, function () {\r",
									"    pm.expect(pm.response.json().message).eqls(msg);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\": \"vhabilitado1@gmail.com\",\r\n    \"code\": \"04S8R*\",\r\n    \"password\": \"12345678\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{hostURL}}/api/v1/auth/reset-password",
							"host": [
								"{{hostURL}}"
							],
							"path": [
								"api",
								"v1",
								"auth",
								"reset-password"
							]
						}
					},
					"response": []
				},
				{
					"name": "TF029 - Usuario No Existe",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"const msg = \"El c√≥digo de verificaci√≥n no es v√°lido o ya ha sido utilizado\";\r",
									"\r",
									"pm.test(\"El header Content-Type es 'application/json'\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\", \"application/json\");\r",
									"});\r",
									"\r",
									"pm.test(\"Estado de la respuesta es 403\", function () {\r",
									"    pm.response.to.have.status(403);\r",
									"});\r",
									"\r",
									"pm.test(`Mensaje de error en el cuerpo de la respuesta es: ${msg}`, function () {\r",
									"    pm.expect(pm.response.json().message).eqls(msg);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\": \"no-existe@gmail.com\",\r\n    \"code\": \"APC75X\",\r\n    \"password\": \"12345678\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{hostURL}}/api/v1/auth/reset-password",
							"host": [
								"{{hostURL}}"
							],
							"path": [
								"api",
								"v1",
								"auth",
								"reset-password"
							]
						}
					},
					"response": []
				},
				{
					"name": "TF030 - Usuario no Habilitado",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"const msg = \"El c√≥digo de verificaci√≥n no es v√°lido o ya ha sido utilizado\";\r",
									"\r",
									"pm.test(\"El header Content-Type es 'application/json'\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\", \"application/json\");\r",
									"});\r",
									"\r",
									"pm.test(\"Estado de la respuesta es 403\", function () {\r",
									"    pm.response.to.have.status(403);\r",
									"});\r",
									"\r",
									"pm.test(`Mensaje de error en el cuerpo de la respuesta es: ${msg}`, function () {\r",
									"    pm.expect(pm.response.json().message).eqls(msg);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\": \"vdeshabilitado@gmail.com\",\r\n    \"code\": \"K1X00A\",\r\n    \"password\": \"12345678\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{hostURL}}/api/v1/auth/reset-password",
							"host": [
								"{{hostURL}}"
							],
							"path": [
								"api",
								"v1",
								"auth",
								"reset-password"
							]
						}
					},
					"response": []
				},
				{
					"name": "TF031 - Codigo No Asociado al Correo",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"const msg = \"El c√≥digo de verificaci√≥n no es v√°lido o ya ha sido utilizado\";\r",
									"\r",
									"pm.test(\"El header Content-Type es 'application/json'\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\", \"application/json\");\r",
									"});\r",
									"\r",
									"pm.test(\"Estado de la respuesta es 403\", function () {\r",
									"    pm.response.to.have.status(403);\r",
									"});\r",
									"\r",
									"pm.test(`Mensaje de error en el cuerpo de la respuesta es: ${msg}`, function () {\r",
									"    pm.expect(pm.response.json().message).eqls(msg);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\": \"uhabilitado@gmail.com\",\r\n    \"code\": \"APC75X\",\r\n    \"password\": \"12345678\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{hostURL}}/api/v1/auth/reset-password",
							"host": [
								"{{hostURL}}"
							],
							"path": [
								"api",
								"v1",
								"auth",
								"reset-password"
							]
						}
					},
					"response": []
				},
				{
					"name": "TF032 - Codigo Ya Usado",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"const msg = \"El c√≥digo de verificaci√≥n no es v√°lido o ya ha sido utilizado\";\r",
									"\r",
									"pm.test(\"El header Content-Type es 'application/json'\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\", \"application/json\");\r",
									"});\r",
									"\r",
									"pm.test(\"Estado de la respuesta es 403\", function () {\r",
									"    pm.response.to.have.status(403);\r",
									"});\r",
									"\r",
									"pm.test(`Mensaje de error en el cuerpo de la respuesta es: ${msg}`, function () {\r",
									"    pm.expect(pm.response.json().message).eqls(msg);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\": \"vhabilitado1@gmail.com\",\r\n    \"code\": \"0S4C86\",\r\n    \"password\": \"12345678\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{hostURL}}/api/v1/auth/reset-password",
							"host": [
								"{{hostURL}}"
							],
							"path": [
								"api",
								"v1",
								"auth",
								"reset-password"
							]
						}
					},
					"response": []
				},
				{
					"name": "TF033 - Codigo Expirado",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"const msg = \"El c√≥digo de verificaci√≥n no es v√°lido o ya ha sido utilizado\";\r",
									"\r",
									"pm.test(\"El header Content-Type es 'application/json'\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\", \"application/json\");\r",
									"});\r",
									"\r",
									"pm.test(\"Estado de la respuesta es 403\", function () {\r",
									"    pm.response.to.have.status(403);\r",
									"});\r",
									"\r",
									"pm.test(`Mensaje de error en el cuerpo de la respuesta es: ${msg}`, function () {\r",
									"    pm.expect(pm.response.json().message).eqls(msg);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\": \"vhabilitado1@gmail.com\",\r\n    \"code\": \"F7HAB0\",\r\n    \"password\": \"12345678\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{hostURL}}/api/v1/auth/reset-password",
							"host": [
								"{{hostURL}}"
							],
							"path": [
								"api",
								"v1",
								"auth",
								"reset-password"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Refrescar Token de Acceso",
			"item": [
				{
					"name": "TF034 - Exitoso",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Estatus es 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"El header Content-Type es 'application/json'\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\", \"application/json\");\r",
									"});\r",
									"\r",
									"pm.test(\"El token de Acceso tiene al menos 10 caracteres\", function () {\r",
									"    let accessToken = pm.response.json().accessToken;\r",
									"    pm.expect(accessToken.length).to.be.at.least(10);\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiIxIiwiaWF0IjoxNzM2MDI2MzQ5LCJleHAiOjE3NDM4MDIzNDksImF1dGhvcml0aWVzIjoiW1JPTEVfVVNFUl0ifQ.PVBJ1oCjBmS0ygR7GeN7tlYs_-Way26KU0lysxuZq6imJXvlstKfsvaA9g5LFrhz",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{hostURL}}/api/v1/auth/refresh-token",
							"host": [
								"{{hostURL}}"
							],
							"path": [
								"api",
								"v1",
								"auth",
								"refresh-token"
							]
						}
					},
					"response": []
				},
				{
					"name": "TF035 - Usuario Deshabilitado",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"\r",
									"pm.test(\"Estado de la respuesta es 403\", function () {\r",
									"    pm.response.to.have.status(403);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiI0IiwiaWF0IjoxNzM3OTQ3MjgyLCJleHAiOjE3NDU3MjMyODIsImF1dGhvcml0aWVzIjoiW1JPTEVfU0VMTEVSXSJ9.Mopo1HjHmaqOXghXkUy2avG9Ki5G2hcUDOqAMAvwqJt_KINDqN6tmL2AaWJqaSSr",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{hostURL}}/api/v1/auth/refresh-token",
							"host": [
								"{{hostURL}}"
							],
							"path": [
								"api",
								"v1",
								"auth",
								"refresh-token"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Crear Producto",
			"item": [
				{
					"name": "TF036 - Exitoso",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status es 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									"\r",
									"const location = pm.response.headers.get(\"Location\");\r",
									"pm.test(`Header 'Location' correcto: ${location}`, function () {\r",
									"    pm.expect(location).to.match(/api\\/v1\\/products\\/\\d+$/);\r",
									"});\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"const url = pm.environment.get(\"hostURL\");\r",
									"\r",
									"pm.sendRequest({\r",
									"    url: `${url}/api/v1/tests/reset-functional-testing-db`,\r",
									"    method: 'GET',\r",
									"    header: {\r",
									"        'Content-Type': 'application/json'\r",
									"    },\r",
									"    body: {\r",
									"        mode: 'raw',\r",
									"        raw: JSON.stringify({}) \r",
									"    }\r",
									"}, function (err, res) {\r",
									"    pm.test(\"ResetDB es 204\", function () {\r",
									"        pm.expect(res).to.have.status(204);\r",
									"    });\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiIxIiwiaWF0IjoxNzM3OTQ3MTQyLCJleHAiOjE3NDU3MjMxNDIsImF1dGhvcml0aWVzIjoiW1JPTEVfU0VMTEVSXSJ9.sIha5dy8gg_u1Pmf4eixFJCdxci2MonOU7A4JxEztZ3Y7aG_k_OkVPBA7gduJY_v",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "name",
									"value": "Xiaomi Celular Redmi Note 13 8+256gb",
									"type": "text"
								},
								{
									"key": "price",
									"value": "191",
									"type": "text"
								},
								{
									"key": "stock",
									"value": "3",
									"type": "text"
								},
								{
									"key": "description",
									"value": "IMAGEN REFERENCIAL\nTama√±o de la pantalla 6.67\"\nTecnolog√≠a de la pantalla AMOLED\nTecnolog√≠a de la pantalla Dolby Vision\nTecnolog√≠a de la pantalla Gorilla Glass\nResoluci√≥n m√°xima 2400x1080\nAlmacenamiento 256 GB\nCapacidad de la bater√≠a 5000 mAh\nFrecuencia del reloj2.4 GHz\nN√∫mero de n√∫cleos 8 n√∫cleos\nMemoria RAM 8 GB\nSistema Operativo Android 13\nConexionesJack 3.5 mm\nConexiones Bluetooth\nConexionesUSB-C\nConexiones Wifi\nConexiones NFC\nConectividad M√≥vil 3G\nLector de huella SI\nC√°mara Delantera 16 mpx\nC√°mara Principal108+8+2 mpx",
									"type": "text"
								},
								{
									"key": "weightPounds",
									"value": "7",
									"type": "text"
								},
								{
									"key": "widthCM",
									"value": "18",
									"type": "text"
								},
								{
									"key": "heightCM",
									"value": "25",
									"type": "text"
								},
								{
									"key": "images",
									"type": "file",
									"src": "test-img.jpg"
								},
								{
									"key": "categoryId",
									"value": "2",
									"type": "text"
								},
								{
									"key": "lengthCM",
									"value": "2",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{hostURL}}/api/v1/products",
							"host": [
								"{{hostURL}}"
							],
							"path": [
								"api",
								"v1",
								"products"
							]
						}
					},
					"response": []
				},
				{
					"name": "TF037 - Usuario No Tiene Rol de Vendedor",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status es 403\", function () {\r",
									"    pm.response.to.have.status(403);\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiIyIiwiaWF0IjoxNzM3OTQ3MTgyLCJleHAiOjE3NDU3MjMxODIsImF1dGhvcml0aWVzIjoiW1JPTEVfVVNFUl0ifQ.M1EQEBc6ycwxLs7Fyy7YyJhQAe19y1hBgxevNz8U78hhtMuReX3e-NOmzsx8i9zG",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "name",
									"value": "Xiaomi Celular Redmi Note 13 8+256gb",
									"type": "text"
								},
								{
									"key": "price",
									"value": "191",
									"type": "text"
								},
								{
									"key": "stock",
									"value": "3",
									"type": "text"
								},
								{
									"key": "description",
									"value": "IMAGEN REFERENCIAL\nTama√±o de la pantalla 6.67\"\nTecnolog√≠a de la pantalla AMOLED\nTecnolog√≠a de la pantalla Dolby Vision\nTecnolog√≠a de la pantalla Gorilla Glass\nResoluci√≥n m√°xima 2400x1080\nAlmacenamiento 256 GB\nCapacidad de la bater√≠a 5000 mAh\nFrecuencia del reloj2.4 GHz\nN√∫mero de n√∫cleos 8 n√∫cleos\nMemoria RAM 8 GB\nSistema Operativo Android 13\nConexionesJack 3.5 mm\nConexiones Bluetooth\nConexionesUSB-C\nConexiones Wifi\nConexiones NFC\nConectividad M√≥vil 3G\nLector de huella SI\nC√°mara Delantera 16 mpx\nC√°mara Principal108+8+2 mpx",
									"type": "text"
								},
								{
									"key": "weightPounds",
									"value": "7",
									"type": "text"
								},
								{
									"key": "widthCM",
									"value": "18",
									"type": "text"
								},
								{
									"key": "heightCM",
									"value": "25",
									"type": "text"
								},
								{
									"key": "images",
									"type": "file",
									"src": "test-img.jpg"
								},
								{
									"key": "categoryId",
									"value": "4",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{hostURL}}/api/v1/products",
							"host": [
								"{{hostURL}}"
							],
							"path": [
								"api",
								"v1",
								"products"
							]
						}
					},
					"response": []
				},
				{
					"name": "TF038 - Usuario Deshabilitado",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"\r",
									"pm.test(\"Estado de la respuesta es 403\", function () {\r",
									"    pm.response.to.have.status(403);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiI0IiwiaWF0IjoxNzM2MTQyOTk0LCJleHAiOjE3NDM5MTg5OTQsImF1dGhvcml0aWVzIjoiW1JPTEVfU0VMTEVSXSJ9.mcn6NOopmjshZxXpJ6OsNBc59NUWt6J1REV8GY_npMN8WFlBUByOcVUxNKfBTVvE",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "name",
									"value": "Xiaomi Celular Redmi Note 13 8+256gb",
									"type": "text"
								},
								{
									"key": "price",
									"value": "191",
									"type": "text"
								},
								{
									"key": "stock",
									"value": "3",
									"type": "text"
								},
								{
									"key": "description",
									"value": "IMAGEN REFERENCIAL\nTama√±o de la pantalla 6.67\"\nTecnolog√≠a de la pantalla AMOLED\nTecnolog√≠a de la pantalla Dolby Vision\nTecnolog√≠a de la pantalla Gorilla Glass\nResoluci√≥n m√°xima 2400x1080\nAlmacenamiento 256 GB\nCapacidad de la bater√≠a 5000 mAh\nFrecuencia del reloj2.4 GHz\nN√∫mero de n√∫cleos 8 n√∫cleos\nMemoria RAM 8 GB\nSistema Operativo Android 13\nConexionesJack 3.5 mm\nConexiones Bluetooth\nConexionesUSB-C\nConexiones Wifi\nConexiones NFC\nConectividad M√≥vil 3G\nLector de huella SI\nC√°mara Delantera 16 mpx\nC√°mara Principal108+8+2 mpx",
									"type": "text"
								},
								{
									"key": "weightPounds",
									"value": "7",
									"type": "text"
								},
								{
									"key": "widthCM",
									"value": "18",
									"type": "text"
								},
								{
									"key": "heightCM",
									"value": "25",
									"type": "text"
								},
								{
									"key": "images",
									"type": "file",
									"src": "test-img.jpg"
								},
								{
									"key": "categoryId",
									"value": "4",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{hostURL}}/api/v1/products",
							"host": [
								"{{hostURL}}"
							],
							"path": [
								"api",
								"v1",
								"products"
							]
						}
					},
					"response": []
				},
				{
					"name": "TF039 - Email no Verificado",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"const msg = \"Tu correo electronico no esta verificado. Completa el proceso de verificacion para continuar\";\r",
									"\r",
									"pm.test(\"El header Content-Type es 'application/json'\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\", \"application/json\");\r",
									"});\r",
									"\r",
									"pm.test(\"Estado de la respuesta es 403\", function () {\r",
									"    pm.response.to.have.status(403);\r",
									"});\r",
									"\r",
									"pm.test(`Mensaje de error en el cuerpo de la respuesta es: ${msg}`, function () {\r",
									"    pm.expect(pm.response.json().message).eqls(msg);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiIzIiwiaWF0IjoxNzM3OTQ3MjA5LCJleHAiOjE3NDU3MjMyMDksImF1dGhvcml0aWVzIjoiW1JPTEVfU0VMTEVSXSJ9.a_uGI51G6-1TKKfHGAW16ywBrEQEWR7OIjnmKJg-2oSfCYjSn-02laVpul6LxsOf",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "name",
									"value": "Xiaomi Celular Redmi Note 13 8+256gb",
									"type": "text"
								},
								{
									"key": "price",
									"value": "191",
									"type": "text"
								},
								{
									"key": "stock",
									"value": "3",
									"type": "text"
								},
								{
									"key": "description",
									"value": "IMAGEN REFERENCIAL\nTama√±o de la pantalla 6.67\"\nTecnolog√≠a de la pantalla AMOLED\nTecnolog√≠a de la pantalla Dolby Vision\nTecnolog√≠a de la pantalla Gorilla Glass\nResoluci√≥n m√°xima 2400x1080\nAlmacenamiento 256 GB\nCapacidad de la bater√≠a 5000 mAh\nFrecuencia del reloj2.4 GHz\nN√∫mero de n√∫cleos 8 n√∫cleos\nMemoria RAM 8 GB\nSistema Operativo Android 13\nConexionesJack 3.5 mm\nConexiones Bluetooth\nConexionesUSB-C\nConexiones Wifi\nConexiones NFC\nConectividad M√≥vil 3G\nLector de huella SI\nC√°mara Delantera 16 mpx\nC√°mara Principal108+8+2 mpx",
									"type": "text"
								},
								{
									"key": "weightPounds",
									"value": "7",
									"type": "text"
								},
								{
									"key": "widthCM",
									"value": "18",
									"type": "text"
								},
								{
									"key": "heightCM",
									"value": "25",
									"type": "text"
								},
								{
									"key": "images",
									"type": "file",
									"src": "test-img.jpg"
								},
								{
									"key": "categoryId",
									"value": "4",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{hostURL}}/api/v1/products",
							"host": [
								"{{hostURL}}"
							],
							"path": [
								"api",
								"v1",
								"products"
							]
						}
					},
					"response": []
				},
				{
					"name": "TF040 - Nombre Invalido",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"const msg = \"El nombre del producto debe contener entre 1 y 255 caracteres\";\r",
									"\r",
									"pm.test(\"El header Content-Type es 'application/json'\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\", \"application/json\");\r",
									"});\r",
									"\r",
									"pm.test(\"Estado de la respuesta es 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(`Mensaje de error en el cuerpo de la respuesta es: ${msg}`, function () {\r",
									"    pm.expect(pm.response.json().message).eqls(msg);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiIxIiwiaWF0IjoxNzM3OTQ3MTQyLCJleHAiOjE3NDU3MjMxNDIsImF1dGhvcml0aWVzIjoiW1JPTEVfU0VMTEVSXSJ9.sIha5dy8gg_u1Pmf4eixFJCdxci2MonOU7A4JxEztZ3Y7aG_k_OkVPBA7gduJY_v",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "name",
									"value": "             ",
									"type": "text"
								},
								{
									"key": "price",
									"value": "191",
									"type": "text"
								},
								{
									"key": "stock",
									"value": "3",
									"type": "text"
								},
								{
									"key": "description",
									"value": "IMAGEN REFERENCIAL\nTama√±o de la pantalla 6.67\"\nTecnolog√≠a de la pantalla AMOLED\nTecnolog√≠a de la pantalla Dolby Vision\nTecnolog√≠a de la pantalla Gorilla Glass\nResoluci√≥n m√°xima 2400x1080\nAlmacenamiento 256 GB\nCapacidad de la bater√≠a 5000 mAh\nFrecuencia del reloj2.4 GHz\nN√∫mero de n√∫cleos 8 n√∫cleos\nMemoria RAM 8 GB\nSistema Operativo Android 13\nConexionesJack 3.5 mm\nConexiones Bluetooth\nConexionesUSB-C\nConexiones Wifi\nConexiones NFC\nConectividad M√≥vil 3G\nLector de huella SI\nC√°mara Delantera 16 mpx\nC√°mara Principal108+8+2 mpx",
									"type": "text"
								},
								{
									"key": "weightPounds",
									"value": "7",
									"type": "text"
								},
								{
									"key": "widthCM",
									"value": "18",
									"type": "text"
								},
								{
									"key": "heightCM",
									"value": "25",
									"type": "text"
								},
								{
									"key": "images",
									"type": "file",
									"src": "test-img.jpg"
								},
								{
									"key": "categoryId",
									"value": "4",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{hostURL}}/api/v1/products",
							"host": [
								"{{hostURL}}"
							],
							"path": [
								"api",
								"v1",
								"products"
							]
						}
					},
					"response": []
				},
				{
					"name": "TF041 - Descripcion Invalida",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"const msg = \"La descripci√≥n del producto debe contener entre 1 y 1000 caracteres\";\r",
									"\r",
									"pm.test(\"El header Content-Type es 'application/json'\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\", \"application/json\");\r",
									"});\r",
									"\r",
									"pm.test(\"Estado de la respuesta es 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(`Mensaje de error en el cuerpo de la respuesta es: ${msg}`, function () {\r",
									"    pm.expect(pm.response.json().message).eqls(msg);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiIxIiwiaWF0IjoxNzM3OTQ3MTQyLCJleHAiOjE3NDU3MjMxNDIsImF1dGhvcml0aWVzIjoiW1JPTEVfU0VMTEVSXSJ9.sIha5dy8gg_u1Pmf4eixFJCdxci2MonOU7A4JxEztZ3Y7aG_k_OkVPBA7gduJY_v",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "name",
									"value": "Titulo 123",
									"type": "text"
								},
								{
									"key": "price",
									"value": "191",
									"type": "text"
								},
								{
									"key": "stock",
									"value": "3",
									"type": "text"
								},
								{
									"key": "description",
									"value": "                                  ",
									"type": "text"
								},
								{
									"key": "weightPounds",
									"value": "7",
									"type": "text"
								},
								{
									"key": "widthCM",
									"value": "18",
									"type": "text"
								},
								{
									"key": "heightCM",
									"value": "25",
									"type": "text"
								},
								{
									"key": "images",
									"type": "file",
									"src": "test-img.jpg"
								},
								{
									"key": "categoryId",
									"value": "4",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{hostURL}}/api/v1/products",
							"host": [
								"{{hostURL}}"
							],
							"path": [
								"api",
								"v1",
								"products"
							]
						}
					},
					"response": []
				},
				{
					"name": "TF042 - Precio Invalido",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"const msg = \"El precio es inv√°lido\";\r",
									"\r",
									"pm.test(\"El header Content-Type es 'application/json'\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\", \"application/json\");\r",
									"});\r",
									"\r",
									"pm.test(\"Estado de la respuesta es 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(`Mensaje de error en el cuerpo de la respuesta es: ${msg}`, function () {\r",
									"    pm.expect(pm.response.json().message).eqls(msg);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiIxIiwiaWF0IjoxNzM3OTQ3MTQyLCJleHAiOjE3NDU3MjMxNDIsImF1dGhvcml0aWVzIjoiW1JPTEVfU0VMTEVSXSJ9.sIha5dy8gg_u1Pmf4eixFJCdxci2MonOU7A4JxEztZ3Y7aG_k_OkVPBA7gduJY_v",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "name",
									"value": "Titulo 123",
									"type": "text"
								},
								{
									"key": "price",
									"value": "-1",
									"type": "text"
								},
								{
									"key": "stock",
									"value": "3",
									"type": "text"
								},
								{
									"key": "description",
									"value": "        descripcion                          ",
									"type": "text"
								},
								{
									"key": "weightPounds",
									"value": "7",
									"type": "text"
								},
								{
									"key": "widthCM",
									"value": "18",
									"type": "text"
								},
								{
									"key": "heightCM",
									"value": "25",
									"type": "text"
								},
								{
									"key": "images",
									"type": "file",
									"src": "test-img.jpg"
								},
								{
									"key": "categoryId",
									"value": "4",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{hostURL}}/api/v1/products",
							"host": [
								"{{hostURL}}"
							],
							"path": [
								"api",
								"v1",
								"products"
							]
						}
					},
					"response": []
				},
				{
					"name": "TF043 - Stock Invalido",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"const msg = \"El precio es inv√°lido\";\r",
									"\r",
									"pm.test(\"El header Content-Type es 'application/json'\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\", \"application/json\");\r",
									"});\r",
									"\r",
									"pm.test(\"Estado de la respuesta es 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(`Mensaje de error en el cuerpo de la respuesta es: ${msg}`, function () {\r",
									"    pm.expect(pm.response.json().message).eqls(msg);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiIxIiwiaWF0IjoxNzM3OTQ3MTQyLCJleHAiOjE3NDU3MjMxNDIsImF1dGhvcml0aWVzIjoiW1JPTEVfU0VMTEVSXSJ9.sIha5dy8gg_u1Pmf4eixFJCdxci2MonOU7A4JxEztZ3Y7aG_k_OkVPBA7gduJY_v",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "name",
									"value": "Titulo 123",
									"type": "text"
								},
								{
									"key": "price",
									"value": "0",
									"type": "text"
								},
								{
									"key": "stock",
									"value": "-1",
									"type": "text"
								},
								{
									"key": "description",
									"value": "        descripcion                          ",
									"type": "text"
								},
								{
									"key": "weightPounds",
									"value": "7",
									"type": "text"
								},
								{
									"key": "widthCM",
									"value": "18",
									"type": "text"
								},
								{
									"key": "heightCM",
									"value": "25",
									"type": "text"
								},
								{
									"key": "images",
									"type": "file",
									"src": "test-img.jpg"
								},
								{
									"key": "categoryId",
									"value": "4",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{hostURL}}/api/v1/products",
							"host": [
								"{{hostURL}}"
							],
							"path": [
								"api",
								"v1",
								"products"
							]
						}
					},
					"response": []
				},
				{
					"name": "TF044 - Peso Invalido",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"const msg = \"El peso del producto no puede ser negativo\";\r",
									"\r",
									"pm.test(\"El header Content-Type es 'application/json'\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\", \"application/json\");\r",
									"});\r",
									"\r",
									"pm.test(\"Estado de la respuesta es 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(`Mensaje de error en el cuerpo de la respuesta es: ${msg}`, function () {\r",
									"    pm.expect(pm.response.json().message).eqls(msg);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiIxIiwiaWF0IjoxNzM3OTQ3MTQyLCJleHAiOjE3NDU3MjMxNDIsImF1dGhvcml0aWVzIjoiW1JPTEVfU0VMTEVSXSJ9.sIha5dy8gg_u1Pmf4eixFJCdxci2MonOU7A4JxEztZ3Y7aG_k_OkVPBA7gduJY_v",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "name",
									"value": "Titulo 123",
									"type": "text"
								},
								{
									"key": "price",
									"value": "4",
									"type": "text"
								},
								{
									"key": "stock",
									"value": "0",
									"type": "text"
								},
								{
									"key": "description",
									"value": "        descripcion                          ",
									"type": "text"
								},
								{
									"key": "weightPounds",
									"value": "-1",
									"type": "text"
								},
								{
									"key": "widthCM",
									"value": "18",
									"type": "text"
								},
								{
									"key": "heightCM",
									"value": "25",
									"type": "text"
								},
								{
									"key": "images",
									"type": "file",
									"src": "test-img.jpg"
								},
								{
									"key": "categoryId",
									"value": "4",
									"type": "text"
								},
								{
									"key": "lengthCM",
									"value": "1",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{hostURL}}/api/v1/products",
							"host": [
								"{{hostURL}}"
							],
							"path": [
								"api",
								"v1",
								"products"
							]
						}
					},
					"response": []
				},
				{
					"name": "TF045 - Altura Invalida",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"const msg = \"La altura del producto no puede ser negativa\";\r",
									"\r",
									"pm.test(\"El header Content-Type es 'application/json'\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\", \"application/json\");\r",
									"});\r",
									"\r",
									"pm.test(\"Estado de la respuesta es 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(`Mensaje de error en el cuerpo de la respuesta es: ${msg}`, function () {\r",
									"    pm.expect(pm.response.json().message).eqls(msg);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiIxIiwiaWF0IjoxNzM3OTQ3MTQyLCJleHAiOjE3NDU3MjMxNDIsImF1dGhvcml0aWVzIjoiW1JPTEVfU0VMTEVSXSJ9.sIha5dy8gg_u1Pmf4eixFJCdxci2MonOU7A4JxEztZ3Y7aG_k_OkVPBA7gduJY_v",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "name",
									"value": "Titulo 123",
									"type": "text"
								},
								{
									"key": "price",
									"value": "10",
									"type": "text"
								},
								{
									"key": "stock",
									"value": "0",
									"type": "text"
								},
								{
									"key": "description",
									"value": "        descripcion                          ",
									"type": "text"
								},
								{
									"key": "weightPounds",
									"value": "0",
									"type": "text"
								},
								{
									"key": "widthCM",
									"value": "18",
									"type": "text"
								},
								{
									"key": "heightCM",
									"value": "-2",
									"type": "text"
								},
								{
									"key": "images",
									"type": "file",
									"src": "test-img.jpg"
								},
								{
									"key": "categoryId",
									"value": "1",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{hostURL}}/api/v1/products",
							"host": [
								"{{hostURL}}"
							],
							"path": [
								"api",
								"v1",
								"products"
							]
						}
					},
					"response": []
				},
				{
					"name": "TF046 - Ancho Invalido",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"const msg = \"El ancho del producto no puede ser negativo\";\r",
									"\r",
									"pm.test(\"El header Content-Type es 'application/json'\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\", \"application/json\");\r",
									"});\r",
									"\r",
									"pm.test(\"Estado de la respuesta es 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(`Mensaje de error en el cuerpo de la respuesta es: ${msg}`, function () {\r",
									"    pm.expect(pm.response.json().message).eqls(msg);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiIxIiwiaWF0IjoxNzM3OTQ3MTQyLCJleHAiOjE3NDU3MjMxNDIsImF1dGhvcml0aWVzIjoiW1JPTEVfU0VMTEVSXSJ9.sIha5dy8gg_u1Pmf4eixFJCdxci2MonOU7A4JxEztZ3Y7aG_k_OkVPBA7gduJY_v",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "name",
									"value": "Titulo 123",
									"type": "text"
								},
								{
									"key": "price",
									"value": "10",
									"type": "text"
								},
								{
									"key": "stock",
									"value": "0",
									"type": "text"
								},
								{
									"key": "description",
									"value": "        descripcion                          ",
									"type": "text"
								},
								{
									"key": "weightPounds",
									"value": "0",
									"type": "text"
								},
								{
									"key": "widthCM",
									"value": "-1",
									"type": "text"
								},
								{
									"key": "heightCM",
									"value": "0",
									"type": "text"
								},
								{
									"key": "images",
									"type": "file",
									"src": "test-img.jpg"
								},
								{
									"key": "categoryId",
									"value": "4",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{hostURL}}/api/v1/products",
							"host": [
								"{{hostURL}}"
							],
							"path": [
								"api",
								"v1",
								"products"
							]
						}
					},
					"response": []
				},
				{
					"name": "TF047 - Largo Invalido",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"const msg = \"El largo del producto no puede ser negativo\";\r",
									"\r",
									"pm.test(\"El header Content-Type es 'application/json'\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\", \"application/json\");\r",
									"});\r",
									"\r",
									"pm.test(\"Estado de la respuesta es 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(`Mensaje de error en el cuerpo de la respuesta es: ${msg}`, function () {\r",
									"    pm.expect(pm.response.json().message).eqls(msg);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiIxIiwiaWF0IjoxNzM3OTQ3MTQyLCJleHAiOjE3NDU3MjMxNDIsImF1dGhvcml0aWVzIjoiW1JPTEVfU0VMTEVSXSJ9.sIha5dy8gg_u1Pmf4eixFJCdxci2MonOU7A4JxEztZ3Y7aG_k_OkVPBA7gduJY_v",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "name",
									"value": "Titulo 123",
									"type": "text"
								},
								{
									"key": "price",
									"value": "10",
									"type": "text"
								},
								{
									"key": "stock",
									"value": "0",
									"type": "text"
								},
								{
									"key": "description",
									"value": "        descripcion                          ",
									"type": "text"
								},
								{
									"key": "weightPounds",
									"value": "0",
									"type": "text"
								},
								{
									"key": "widthCM",
									"value": "0",
									"type": "text"
								},
								{
									"key": "heightCM",
									"value": "0",
									"type": "text"
								},
								{
									"key": "images",
									"type": "file",
									"src": "test-img.jpg"
								},
								{
									"key": "categoryId",
									"value": "1",
									"type": "text"
								},
								{
									"key": "lengthCM",
									"value": "-1",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{hostURL}}/api/v1/products",
							"host": [
								"{{hostURL}}"
							],
							"path": [
								"api",
								"v1",
								"products"
							]
						}
					},
					"response": []
				},
				{
					"name": "TF048 - Producto Sin Imagenes",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"const msg = \"No es posible crear un producto sin im√°genes\";\r",
									"\r",
									"pm.test(\"El header Content-Type es 'application/json'\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\", \"application/json\");\r",
									"});\r",
									"\r",
									"pm.test(\"Estado de la respuesta es 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(`Mensaje de error en el cuerpo de la respuesta es: ${msg}`, function () {\r",
									"    pm.expect(pm.response.json().message).eqls(msg);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiIxIiwiaWF0IjoxNzM3OTQ3MTQyLCJleHAiOjE3NDU3MjMxNDIsImF1dGhvcml0aWVzIjoiW1JPTEVfU0VMTEVSXSJ9.sIha5dy8gg_u1Pmf4eixFJCdxci2MonOU7A4JxEztZ3Y7aG_k_OkVPBA7gduJY_v",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "name",
									"value": "Titulo 123",
									"type": "text"
								},
								{
									"key": "price",
									"value": "0.1",
									"type": "text"
								},
								{
									"key": "stock",
									"value": "0",
									"type": "text"
								},
								{
									"key": "description",
									"value": "        descripcion                          ",
									"type": "text"
								},
								{
									"key": "weightPounds",
									"value": "0",
									"type": "text"
								},
								{
									"key": "widthCM",
									"value": "0",
									"type": "text"
								},
								{
									"key": "heightCM",
									"value": "0",
									"type": "text"
								},
								{
									"key": "images",
									"type": "file",
									"src": [],
									"disabled": true
								},
								{
									"key": "categoryId",
									"value": "1",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{hostURL}}/api/v1/products",
							"host": [
								"{{hostURL}}"
							],
							"path": [
								"api",
								"v1",
								"products"
							]
						}
					},
					"response": []
				},
				{
					"name": "TF049 - Producto Ya Registrado",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"const msg = \"No se pudo crear el producto ya que usted ya cuenta con un producto con el mismo nombre\";\r",
									"\r",
									"pm.test(\"El header Content-Type es 'application/json'\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\", \"application/json\");\r",
									"});\r",
									"\r",
									"pm.test(\"Estado de la respuesta es 409\", function () {\r",
									"    pm.response.to.have.status(409);\r",
									"});\r",
									"\r",
									"pm.test(`Mensaje de error en el cuerpo de la respuesta es: ${msg}`, function () {\r",
									"    pm.expect(pm.response.json().message).eqls(msg);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiIxIiwiaWF0IjoxNzM3OTQ3MTQyLCJleHAiOjE3NDU3MjMxNDIsImF1dGhvcml0aWVzIjoiW1JPTEVfU0VMTEVSXSJ9.sIha5dy8gg_u1Pmf4eixFJCdxci2MonOU7A4JxEztZ3Y7aG_k_OkVPBA7gduJY_v",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "name",
									"value": "Cargador de bater√≠a AA",
									"type": "text"
								},
								{
									"key": "price",
									"value": "191",
									"type": "text"
								},
								{
									"key": "stock",
									"value": "3",
									"type": "text"
								},
								{
									"key": "description",
									"value": "1 metro de largo, 480 Mbps de velocidad de transferencia de datos, compatible con USB 2.0 y 1.1",
									"type": "text"
								},
								{
									"key": "weightPounds",
									"value": "7",
									"type": "text"
								},
								{
									"key": "widthCM",
									"value": "18",
									"type": "text"
								},
								{
									"key": "heightCM",
									"value": "25",
									"type": "text"
								},
								{
									"key": "images",
									"type": "file",
									"src": "test-img.jpg"
								},
								{
									"key": "categoryId",
									"value": "1",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{hostURL}}/api/v1/products",
							"host": [
								"{{hostURL}}"
							],
							"path": [
								"api",
								"v1",
								"products"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Obtener Productos",
			"item": [
				{
					"name": "TF050 - Paginacion por Defecto",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"let pageable = pm.response.json().pageable;\r",
									"\r",
									"pm.test(\"Numero de Pagina es 0\", function () {\r",
									"    pm.expect(pageable.pageNumber).to.equal(0);\r",
									"});\r",
									"\r",
									"pm.test(\"Tama√±o de pagina es 20 (solicitada)\", function () {\r",
									"    pm.expect(pageable.pageSize).to.equal(20); \r",
									"});\r",
									"\r",
									"pm.test(\"Estado de la respuesta es 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{hostURL}}/api/v1/products",
							"host": [
								"{{hostURL}}"
							],
							"path": [
								"api",
								"v1",
								"products"
							]
						}
					},
					"response": []
				},
				{
					"name": "TF051 - Orden ASC",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const b = pm.response.json();\r",
									"\r",
									"pm.test(`Cantidad de Productos es Igual a 4`, function () {\r",
									"    pm.expect(b.content.length).to.equal(4);\r",
									"});\r",
									"\r",
									"pm.test(`Productos.Precio estan ordenados ASC`, function () {\r",
									"    let precio1 = b.content[0].price;\r",
									"    let precio2 = b.content[1].price;\r",
									"    let precio3 = b.content[2].price;\r",
									"    let precio4 = b.content[3].price;\r",
									"\r",
									"    pm.expect(precio1).to.lessThan(precio2);\r",
									"    pm.expect(precio2).to.lessThan(precio3);\r",
									"    pm.expect(precio3).to.lessThan(precio4);\r",
									"});\r",
									"\r",
									"pm.test(\"El header Content-Type es 'application/json'\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\", \"application/json\");\r",
									"});\r",
									"\r",
									"pm.test(\"Estado de la respuesta es 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{hostURL}}/api/v1/products?sort=price,asc",
							"host": [
								"{{hostURL}}"
							],
							"path": [
								"api",
								"v1",
								"products"
							],
							"query": [
								{
									"key": "sort",
									"value": "price,asc"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "TF052 - Orden DESC",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const b = pm.response.json();\r",
									"\r",
									"pm.test(`Cantidad de Productos es Igual a 4`, function () {\r",
									"    pm.expect(b.content.length).to.equal(4);\r",
									"});\r",
									"\r",
									"pm.test(`Productos.Id estan ordenados DESC`, function () {\r",
									"    let id1 = b.content[0].id;\r",
									"    let id2 = b.content[1].id;\r",
									"    let id3 = b.content[2].id;\r",
									"    let id4 = b.content[3].id;\r",
									"\r",
									"    pm.expect(id1).to.greaterThan(id2);\r",
									"    pm.expect(id2).to.greaterThan(id3);\r",
									"    pm.expect(id3).to.greaterThan(id4);\r",
									"});\r",
									"\r",
									"pm.test(\"El header Content-Type es 'application/json'\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\", \"application/json\");\r",
									"});\r",
									"\r",
									"pm.test(\"Estado de la respuesta es 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{hostURL}}/api/v1/products?sort=id,desc",
							"host": [
								"{{hostURL}}"
							],
							"path": [
								"api",
								"v1",
								"products"
							],
							"query": [
								{
									"key": "sort",
									"value": "id,desc"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "TF053 - Propiedad no Permitida",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const msg = \"Propiedad de ordenamiento no permitida\";\r",
									"\r",
									"pm.test(\"El header Content-Type es 'application/json'\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\", \"application/json\");\r",
									"});\r",
									"\r",
									"pm.test(\"Estado de la respuesta es 403\", function () {\r",
									"    pm.response.to.have.status(403);\r",
									"});\r",
									"\r",
									"pm.test(`Mensaje de error en el cuerpo de la respuesta es: ${msg}`, function () {\r",
									"    pm.expect(pm.response.json().message).eqls(msg);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{hostURL}}/api/v1/products?sort=description,desc",
							"host": [
								"{{hostURL}}"
							],
							"path": [
								"api",
								"v1",
								"products"
							],
							"query": [
								{
									"key": "sort",
									"value": "description,desc"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "TF054 - Query (Sin Acento)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const b = pm.response.json();\r",
									"const nombres = b.content.map(c => c.name);\r",
									"\r",
									"pm.test(\"El header Content-Type es 'application/json'\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\", \"application/json\");\r",
									"});\r",
									"\r",
									"pm.test(\"Estado de la respuesta es 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(`Cantidad de Productos es Igual a 2`, function () {\r",
									"    pm.expect(b.content.length).to.equal(2);\r",
									"});\r",
									"\r",
									"pm.test(`Productos con coincidencia en Producto.Nombre`, function () {\r",
									"    pm.expect(nombres).contains(\r",
									"        \"Cargador de bater√≠a AA\"\r",
									"    );\r",
									"});\r",
									"\r",
									"pm.test(`Productos con coincidencia en Producto.Descripcion`, function () {\r",
									"    pm.expect(nombres).contains(\"Celular Samsung Galaxy S21 Ultra 5G\");\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{hostURL}}/api/v1/products?query=quiero una bateria",
							"host": [
								"{{hostURL}}"
							],
							"path": [
								"api",
								"v1",
								"products"
							],
							"query": [
								{
									"key": "query",
									"value": "quiero una bateria"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "TF055 - Query (Con Acento)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const b = pm.response.json();\r",
									"const nombres = b.content.map(c => c.name);\r",
									"\r",
									"pm.test(\"Estado de la respuesta es 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"El header Content-Type es 'application/json'\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\", \"application/json\");\r",
									"});\r",
									"\r",
									"pm.test(`Cantidad de Productos es Igual a 3`, function () {\r",
									"    pm.expect(b.content.length).to.equal(3);\r",
									"});\r",
									"\r",
									"pm.test(`Productos con coincidencia en Producto.Nombre`, function () {\r",
									"    pm.expect(nombres).contains(\r",
									"        \"Samsung Smart Watch 5 Pro (amoled)\",\r",
									"        \"Celular Samsung Galaxy S21 Ultra 5G\"\r",
									"    );\r",
									"});\r",
									"\r",
									"pm.test(`Productos con coincidencia en Producto.Descripcion`, function () {\r",
									"    pm.expect(nombres).contains(\"Micr√≥fono Lavalier inal√°mbrico\");\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{hostURL}}/api/v1/products?query=prueba s√°ms√∫ng",
							"host": [
								"{{hostURL}}"
							],
							"path": [
								"api",
								"v1",
								"products"
							],
							"query": [
								{
									"key": "query",
									"value": "prueba s√°ms√∫ng"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "TF056 - Query (Sin distinci√≥n MAYUS/MINUS)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const b = pm.response.json();\r",
									"const nombres = b.content.map(c => c.name);\r",
									"\r",
									"pm.test(\"El header Content-Type es 'application/json'\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\", \"application/json\");\r",
									"});\r",
									"\r",
									"pm.test(\"Estado de la respuesta es 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(`Cantidad de Productos es Igual a 2`, function () {\r",
									"    pm.expect(b.content.length).to.equal(2);\r",
									"});\r",
									"\r",
									"pm.test(`Productos con coincidencia en Producto.Nombre`, function () {\r",
									"    pm.expect(nombres).contains(\r",
									"        \"Samsung Smart Watch 5 Pro (amoled)\"\r",
									"    );\r",
									"});\r",
									"\r",
									"pm.test(`Productos con coincidencia en Producto.Descripcion`, function () {\r",
									"    pm.expect(nombres).contains(\"Celular Samsung Galaxy S21 Ultra 5G\");\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{hostURL}}/api/v1/products?query=pantalla aMoLeD",
							"host": [
								"{{hostURL}}"
							],
							"path": [
								"api",
								"v1",
								"products"
							],
							"query": [
								{
									"key": "query",
									"value": "pantalla aMoLeD"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "TF057 - Filtro (Por Categoria)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const b = pm.response.json();\r",
									"\r",
									"pm.test(\"El header Content-Type es 'application/json'\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\", \"application/json\");\r",
									"});\r",
									"\r",
									"pm.test(\"Estado de la respuesta es 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(`Cantidad de Productos es Igual a 1`, function () {\r",
									"    pm.expect(b.content.length).to.equal(1);\r",
									"});\r",
									"\r",
									"pm.test(`Producto es el esperado`, function () {\r",
									"    pm.expect(b.content[0].name).eqls(\"Celular Samsung Galaxy S21 Ultra 5G\");\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{hostURL}}/api/v1/products?categoryId=2",
							"host": [
								"{{hostURL}}"
							],
							"path": [
								"api",
								"v1",
								"products"
							],
							"query": [
								{
									"key": "categoryId",
									"value": "2"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "TF058 - Filtro Invalido (Id de Categoria)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const msg = \"Id de la categor√≠a no es un numero entero\";\r",
									"\r",
									"pm.test(\"El header Content-Type es 'application/json'\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\", \"application/json\");\r",
									"});\r",
									"\r",
									"pm.test(\"Estado de la respuesta es 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(`Mensaje de error en el cuerpo de la respuesta es: ${msg}`, function () {\r",
									"    pm.expect(pm.response.json().message).eqls(msg);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{hostURL}}/api/v1/products?categoryId=true",
							"host": [
								"{{hostURL}}"
							],
							"path": [
								"api",
								"v1",
								"products"
							],
							"query": [
								{
									"key": "categoryId",
									"value": "true"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "TF059 - Cantidad por P√°gina Invalida",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const msg = \"El tama√±o de la p√°gina no puede ser mayor a 100\";\r",
									"\r",
									"pm.test(\"El header Content-Type es 'application/json'\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\", \"application/json\");\r",
									"});\r",
									"\r",
									"pm.test(\"Estado de la respuesta es 403\", function () {\r",
									"    pm.response.to.have.status(403);\r",
									"});\r",
									"\r",
									"pm.test(`Mensaje de error en el cuerpo de la respuesta es: ${msg}`, function () {\r",
									"    pm.expect(pm.response.json().message).eqls(msg);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{hostURL}}/api/v1/products?size=101",
							"host": [
								"{{hostURL}}"
							],
							"path": [
								"api",
								"v1",
								"products"
							],
							"query": [
								{
									"key": "size",
									"value": "101"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "rango de precios",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const b = pm.response.json();\r",
									"const precios = b.content.map(c => c.price);\r",
									"\r",
									"pm.test(`Cantidad de Productos es Igual a 1`, function () {\r",
									"    pm.expect(b.content.length).to.equal(1);\r",
									"});\r",
									"\r",
									"pm.test(`Productos.Precio son menores a 99`, function () {\r",
									"    precios.forEach(precio => {\r",
									"        pm.expect(precio).to.be.below(99);\r",
									"    });\r",
									"});\r",
									"\r",
									"pm.test(`Productos.Precio son mayores a 17`, function () {\r",
									"    precios.forEach(precio => {\r",
									"        pm.expect(precio).to.be.above(17); \r",
									"    });\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{hostURL}}/api/v1/products?price=>17&price=<99",
							"host": [
								"{{hostURL}}"
							],
							"path": [
								"api",
								"v1",
								"products"
							],
							"query": [
								{
									"key": "price",
									"value": ">17"
								},
								{
									"key": "price",
									"value": "<99"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Agregar Producto al Carrito",
			"item": [
				{
					"name": "TF060 - Exitoso - Sin Carrito",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Estado es 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									"const location = pm.response.headers.get(\"Location\");\r",
									"pm.test(`Header 'Location' correcto: ${location}`, function () {\r",
									"    pm.expect(location).to.match(/api\\/v1\\/carts\\/items\\/\\d+$/);\r",
									"});\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"const url = pm.environment.get(\"hostURL\");\r",
									"\r",
									"pm.sendRequest({\r",
									"    url: `${url}/api/v1/tests/reset-functional-testing-db`,\r",
									"    method: 'GET',\r",
									"    header: {\r",
									"        'Content-Type': 'application/json'\r",
									"    },\r",
									"    body: {\r",
									"        mode: 'raw',\r",
									"        raw: JSON.stringify({}) \r",
									"    }\r",
									"}, function (err, res) {\r",
									"    pm.test(\"ResetDB es 204\", function () {\r",
									"        pm.expect(res).to.have.status(204);\r",
									"    });\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiIxIiwiaWF0IjoxNzM3OTQ3MTQyLCJleHAiOjE3NDU3MjMxNDIsImF1dGhvcml0aWVzIjoiW1JPTEVfU0VMTEVSXSJ9.sIha5dy8gg_u1Pmf4eixFJCdxci2MonOU7A4JxEztZ3Y7aG_k_OkVPBA7gduJY_v",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"productId\": 1,\r\n  \"quantity\": 12\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{hostURL}}/api/v1/carts/items",
							"host": [
								"{{hostURL}}"
							],
							"path": [
								"api",
								"v1",
								"carts",
								"items"
							]
						}
					},
					"response": []
				},
				{
					"name": "TF061 - Exitoso - Con Carrito",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Estado es 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									"const location = pm.response.headers.get(\"Location\");\r",
									"pm.test(`Header 'Location' correcto: ${location}`, function () {\r",
									"    pm.expect(location).to.match(/api\\/v1\\/carts\\/items\\/\\d+$/);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiIyIiwiaWF0IjoxNzM3OTQ3MTgyLCJleHAiOjE3NDU3MjMxODIsImF1dGhvcml0aWVzIjoiW1JPTEVfVVNFUl0ifQ.M1EQEBc6ycwxLs7Fyy7YyJhQAe19y1hBgxevNz8U78hhtMuReX3e-NOmzsx8i9zG",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"productId\": 1,\r\n  \"quantity\": 12\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{hostURL}}/api/v1/carts/items",
							"host": [
								"{{hostURL}}"
							],
							"path": [
								"api",
								"v1",
								"carts",
								"items"
							]
						}
					},
					"response": []
				},
				{
					"name": "TF062 - No Autenticado",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Estado es 403\", function () {\r",
									"    pm.response.to.have.status(403);\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"productId\": 1,\r\n  \"quantity\": 12\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{hostURL}}/api/v1/carts/items",
							"host": [
								"{{hostURL}}"
							],
							"path": [
								"api",
								"v1",
								"carts",
								"items"
							]
						}
					},
					"response": []
				},
				{
					"name": "TF063 - No Habilitado",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Estado es 403\", function () {\r",
									"    pm.response.to.have.status(403);\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiI0IiwiaWF0IjoxNzM3OTQ3MjgyLCJleHAiOjE3NDU3MjMyODIsImF1dGhvcml0aWVzIjoiW1JPTEVfU0VMTEVSXSJ9.Mopo1HjHmaqOXghXkUy2avG9Ki5G2hcUDOqAMAvwqJt_KINDqN6tmL2AaWJqaSSr",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"productId\": 1,\r\n  \"quantity\": 12\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{hostURL}}/api/v1/carts/items",
							"host": [
								"{{hostURL}}"
							],
							"path": [
								"api",
								"v1",
								"carts",
								"items"
							]
						}
					},
					"response": []
				},
				{
					"name": "TF064 - Cantidad a Agregar Invalida",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const msg = \"La cantidad a agregar debe ser mayor a 0\";\r",
									"\r",
									"pm.test(\"El header Content-Type es 'application/json'\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\", \"application/json\");\r",
									"});\r",
									"\r",
									"pm.test(\"Estado de la respuesta es 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(`Mensaje de error en el cuerpo de la respuesta es: ${msg}`, function () {\r",
									"    pm.expect(pm.response.json().message).eqls(msg);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiIxIiwiaWF0IjoxNzM3OTQ3MTQyLCJleHAiOjE3NDU3MjMxNDIsImF1dGhvcml0aWVzIjoiW1JPTEVfU0VMTEVSXSJ9.sIha5dy8gg_u1Pmf4eixFJCdxci2MonOU7A4JxEztZ3Y7aG_k_OkVPBA7gduJY_v",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"productId\": 1,\r\n  \"quantity\": 0\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{hostURL}}/api/v1/carts/items",
							"host": [
								"{{hostURL}}"
							],
							"path": [
								"api",
								"v1",
								"carts",
								"items"
							]
						}
					},
					"response": []
				},
				{
					"name": "TF065 - Stock Insuficiente",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const msg = \"Stock Insuficiente, por favor reduzca la cantidad\";\r",
									"\r",
									"pm.test(\"El header Content-Type es 'application/json'\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\", \"application/json\");\r",
									"});\r",
									"\r",
									"pm.test(\"Estado de la respuesta es 409\", function () {\r",
									"    pm.response.to.have.status(409);\r",
									"});\r",
									"\r",
									"pm.test(`Mensaje de error en el cuerpo de la respuesta es: ${msg}`, function () {\r",
									"    pm.expect(pm.response.json().message).eqls(msg);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiIxIiwiaWF0IjoxNzM3OTQ3MTQyLCJleHAiOjE3NDU3MjMxNDIsImF1dGhvcml0aWVzIjoiW1JPTEVfU0VMTEVSXSJ9.sIha5dy8gg_u1Pmf4eixFJCdxci2MonOU7A4JxEztZ3Y7aG_k_OkVPBA7gduJY_v",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"productId\": 1,\r\n  \"quantity\": 13\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{hostURL}}/api/v1/carts/items",
							"host": [
								"{{hostURL}}"
							],
							"path": [
								"api",
								"v1",
								"carts",
								"items"
							]
						}
					},
					"response": []
				},
				{
					"name": "TF066 - Producto Ya en el Carrito",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const msg = \"El producto ya se encuentra en el carrito\"\r",
									"pm.test(\"El header Content-Type es 'application/json'\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\", \"application/json\");\r",
									"});\r",
									"\r",
									"pm.test(\"Estado de la respuesta es 409\", function () {\r",
									"    pm.response.to.have.status(409);\r",
									"});\r",
									"\r",
									"pm.test(`Mensaje de error en el cuerpo de la respuesta es: ${msg}`, function () {\r",
									"    pm.expect(pm.response.json().message).eqls(msg);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiIyIiwiaWF0IjoxNzM3OTQ3MTgyLCJleHAiOjE3NDU3MjMxODIsImF1dGhvcml0aWVzIjoiW1JPTEVfVVNFUl0ifQ.M1EQEBc6ycwxLs7Fyy7YyJhQAe19y1hBgxevNz8U78hhtMuReX3e-NOmzsx8i9zG",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"productId\": 2,\r\n  \"quantity\": 1\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{hostURL}}/api/v1/carts/items",
							"host": [
								"{{hostURL}}"
							],
							"path": [
								"api",
								"v1",
								"carts",
								"items"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Cambiar Cantidad de Producto en el Carrito",
			"item": [
				{
					"name": "TF067 - Exitoso ‚Äì Aumentar Cantidad",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Estado es 204\", function () {\r",
									"    pm.response.to.have.status(204);\r",
									"});\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"const url = pm.environment.get(\"hostURL\");\r",
									"\r",
									"pm.sendRequest({\r",
									"    url: `${url}/api/v1/tests/reset-functional-testing-db`,\r",
									"    method: 'GET',\r",
									"    header: {\r",
									"        'Content-Type': 'application/json'\r",
									"    },\r",
									"    body: {\r",
									"        mode: 'raw',\r",
									"        raw: JSON.stringify({}) \r",
									"    }\r",
									"}, function (err, res) {\r",
									"    pm.test(\"ResetDB es 204\", function () {\r",
									"        pm.expect(res).to.have.status(204);\r",
									"    });\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiIyIiwiaWF0IjoxNzM3OTQ3MTgyLCJleHAiOjE3NDU3MjMxODIsImF1dGhvcml0aWVzIjoiW1JPTEVfVVNFUl0ifQ.M1EQEBc6ycwxLs7Fyy7YyJhQAe19y1hBgxevNz8U78hhtMuReX3e-NOmzsx8i9zG",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "1",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{hostURL}}/api/v1/carts/items/1/amount",
							"host": [
								"{{hostURL}}"
							],
							"path": [
								"api",
								"v1",
								"carts",
								"items",
								"1",
								"amount"
							],
							"query": [
								{
									"key": "s",
									"value": null,
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "TF068 - Exitoso ‚Äì Disminuir Cantidad",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Estado es 204\", function () {\r",
									"    pm.response.to.have.status(204);\r",
									"});\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"const url = pm.environment.get(\"hostURL\");\r",
									"\r",
									"pm.sendRequest({\r",
									"    url: `${url}/api/v1/tests/reset-functional-testing-db`,\r",
									"    method: 'GET',\r",
									"    header: {\r",
									"        'Content-Type': 'application/json'\r",
									"    },\r",
									"    body: {\r",
									"        mode: 'raw',\r",
									"        raw: JSON.stringify({}) \r",
									"    }\r",
									"}, function (err, res) {\r",
									"    pm.test(\"ResetDB es 204\", function () {\r",
									"        pm.expect(res).to.have.status(204);\r",
									"    });\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiIyIiwiaWF0IjoxNzM3OTQ3MTgyLCJleHAiOjE3NDU3MjMxODIsImF1dGhvcml0aWVzIjoiW1JPTEVfVVNFUl0ifQ.M1EQEBc6ycwxLs7Fyy7YyJhQAe19y1hBgxevNz8U78hhtMuReX3e-NOmzsx8i9zG",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "-1",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{hostURL}}/api/v1/carts/items/1/amount",
							"host": [
								"{{hostURL}}"
							],
							"path": [
								"api",
								"v1",
								"carts",
								"items",
								"1",
								"amount"
							],
							"query": [
								{
									"key": "s",
									"value": null,
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "TF069 - Exitoso - Eliminar Item",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Estado es 204\", function () {\r",
									"    pm.response.to.have.status(204);\r",
									"});\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"const url = pm.environment.get(\"hostURL\");\r",
									"\r",
									"pm.sendRequest({\r",
									"    url: `${url}/api/v1/tests/reset-functional-testing-db`,\r",
									"    method: 'GET',\r",
									"    header: {\r",
									"        'Content-Type': 'application/json'\r",
									"    },\r",
									"    body: {\r",
									"        mode: 'raw',\r",
									"        raw: JSON.stringify({}) \r",
									"    }\r",
									"}, function (err, res) {\r",
									"    pm.test(\"ResetDB es 204\", function () {\r",
									"        pm.expect(res).to.have.status(204);\r",
									"    });\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiIyIiwiaWF0IjoxNzM3OTQ3MTgyLCJleHAiOjE3NDU3MjMxODIsImF1dGhvcml0aWVzIjoiW1JPTEVfVVNFUl0ifQ.M1EQEBc6ycwxLs7Fyy7YyJhQAe19y1hBgxevNz8U78hhtMuReX3e-NOmzsx8i9zG",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "-999",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{hostURL}}/api/v1/carts/items/1/amount",
							"host": [
								"{{hostURL}}"
							],
							"path": [
								"api",
								"v1",
								"carts",
								"items",
								"1",
								"amount"
							],
							"query": [
								{
									"key": "s",
									"value": null,
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "TF070 - No Autenticado",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Estado es 403\", function () {\r",
									"    pm.response.to.have.status(403);\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "-999",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{hostURL}}/api/v1/carts/items/1/amount",
							"host": [
								"{{hostURL}}"
							],
							"path": [
								"api",
								"v1",
								"carts",
								"items",
								"1",
								"amount"
							],
							"query": [
								{
									"key": "s",
									"value": null,
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "TF071 - No Habilitado",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Estado es 403\", function () {\r",
									"    pm.response.to.have.status(403);\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiI0IiwiaWF0IjoxNzM3OTQ3MjgyLCJleHAiOjE3NDU3MjMyODIsImF1dGhvcml0aWVzIjoiW1JPTEVfU0VMTEVSXSJ9.Mopo1HjHmaqOXghXkUy2avG9Ki5G2hcUDOqAMAvwqJt_KINDqN6tmL2AaWJqaSSr",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "-999",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{hostURL}}/api/v1/carts/items/1/amount",
							"host": [
								"{{hostURL}}"
							],
							"path": [
								"api",
								"v1",
								"carts",
								"items",
								"1",
								"amount"
							],
							"query": [
								{
									"key": "s",
									"value": null,
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "TF072 - No le Pertenece",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const msg = \"El √çtem especificado no existe en su carrito\";\r",
									"\r",
									"pm.test(\"El header Content-Type es 'application/json'\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\", \"application/json\");\r",
									"});\r",
									"\r",
									"pm.test(\"Estado de la respuesta es 404\", function () {\r",
									"    pm.response.to.have.status(404);\r",
									"});\r",
									"\r",
									"pm.test(`Mensaje de error en el cuerpo de la respuesta es: ${msg}`, function () {\r",
									"    pm.expect(pm.response.json().message).eqls(msg);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiIxIiwiaWF0IjoxNzM3OTQ3MTQyLCJleHAiOjE3NDU3MjMxNDIsImF1dGhvcml0aWVzIjoiW1JPTEVfU0VMTEVSXSJ9.sIha5dy8gg_u1Pmf4eixFJCdxci2MonOU7A4JxEztZ3Y7aG_k_OkVPBA7gduJY_v",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "-999",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{hostURL}}/api/v1/carts/items/1/amount",
							"host": [
								"{{hostURL}}"
							],
							"path": [
								"api",
								"v1",
								"carts",
								"items",
								"1",
								"amount"
							],
							"query": [
								{
									"key": "s",
									"value": null,
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "TF073 - Delta Invalido",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const msg = \"El valor de cambio no debe ser 0\";\r",
									"\r",
									"pm.test(\"El header Content-Type es 'application/json'\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\", \"application/json\");\r",
									"});\r",
									"\r",
									"pm.test(\"Estado de la respuesta es 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(`Mensaje de error en el cuerpo de la respuesta es: ${msg}`, function () {\r",
									"    pm.expect(pm.response.json().message).eqls(msg);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiIyIiwiaWF0IjoxNzM3OTQ3MTgyLCJleHAiOjE3NDU3MjMxODIsImF1dGhvcml0aWVzIjoiW1JPTEVfVVNFUl0ifQ.M1EQEBc6ycwxLs7Fyy7YyJhQAe19y1hBgxevNz8U78hhtMuReX3e-NOmzsx8i9zG",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "0",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{hostURL}}/api/v1/carts/items/1/amount",
							"host": [
								"{{hostURL}}"
							],
							"path": [
								"api",
								"v1",
								"carts",
								"items",
								"1",
								"amount"
							],
							"query": [
								{
									"key": "s",
									"value": null,
									"disabled": true
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Obtener Carrito",
			"item": [
				{
					"name": "TF074 - Exitoso - Sin Carrito",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"\r",
									"pm.test(\"Estado es 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Cantidad de Items igual a 0\", function () {\r",
									"    pm.expect(pm.response.json().items).to.be.an('array').that.is.empty;\r",
									"});\r",
									"\r",
									"pm.test(\"Costo total igual a 0\", function () {\r",
									"    pm.expect(pm.response.json().total).to.equal(0);\r",
									"});\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"const url = pm.environment.get(\"hostURL\");\r",
									"\r",
									"pm.sendRequest({\r",
									"    url: `${url}/api/v1/tests/reset-functional-testing-db`,\r",
									"    method: 'GET',\r",
									"    header: {\r",
									"        'Content-Type': 'application/json'\r",
									"    },\r",
									"    body: {\r",
									"        mode: 'raw',\r",
									"        raw: JSON.stringify({}) \r",
									"    }\r",
									"}, function (err, res) {\r",
									"    pm.test(\"ResetDB es 204\", function () {\r",
									"        pm.expect(res).to.have.status(204);\r",
									"    });\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiIxIiwiaWF0IjoxNzM3OTQ3MTQyLCJleHAiOjE3NDU3MjMxNDIsImF1dGhvcml0aWVzIjoiW1JPTEVfU0VMTEVSXSJ9.sIha5dy8gg_u1Pmf4eixFJCdxci2MonOU7A4JxEztZ3Y7aG_k_OkVPBA7gduJY_v",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{hostURL}}/api/v1/carts",
							"host": [
								"{{hostURL}}"
							],
							"path": [
								"api",
								"v1",
								"carts"
							]
						}
					},
					"response": []
				},
				{
					"name": "TF075 - Exitoso - Con Carrito",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"\r",
									"pm.test(\"Estado es 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Items son los esperados\", function () {\r",
									"    let items = pm.response.json().items.map(i => i.productName);\r",
									"    pm.expect(items).to.include.members([\r",
									"        \"Samsung Smart Watch 5 Pro (amoled)\",\r",
									"        \"Celular Samsung Galaxy S21 Ultra 5G\"\r",
									"    ]);\r",
									"});\r",
									"\r",
									"pm.test(\"Cantidad de Items igual a 2\", function () {\r",
									"    pm.expect(pm.response.json().items).length(2);\r",
									"});\r",
									"\r",
									"pm.test(\"Costo total igual a 3929.94\", function () {\r",
									"    pm.expect(pm.response.json().total).to.equal(3929.94);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiIyIiwiaWF0IjoxNzM3OTQ3MTgyLCJleHAiOjE3NDU3MjMxODIsImF1dGhvcml0aWVzIjoiW1JPTEVfVVNFUl0ifQ.M1EQEBc6ycwxLs7Fyy7YyJhQAe19y1hBgxevNz8U78hhtMuReX3e-NOmzsx8i9zG",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{hostURL}}/api/v1/carts",
							"host": [
								"{{hostURL}}"
							],
							"path": [
								"api",
								"v1",
								"carts"
							]
						}
					},
					"response": []
				},
				{
					"name": "TF076 - No Autenticado",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"\r",
									"pm.test(\"Estado es 403\", function () {\r",
									"    pm.response.to.have.status(403);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{hostURL}}/api/v1/carts",
							"host": [
								"{{hostURL}}"
							],
							"path": [
								"api",
								"v1",
								"carts"
							]
						}
					},
					"response": []
				},
				{
					"name": "TF077 - No Habilitado",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"\r",
									"pm.test(\"Estado es 403\", function () {\r",
									"    pm.response.to.have.status(403);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiI0IiwiaWF0IjoxNzM3OTQ3MjgyLCJleHAiOjE3NDU3MjMyODIsImF1dGhvcml0aWVzIjoiW1JPTEVfU0VMTEVSXSJ9.Mopo1HjHmaqOXghXkUy2avG9Ki5G2hcUDOqAMAvwqJt_KINDqN6tmL2AaWJqaSSr",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{hostURL}}/api/v1/carts",
							"host": [
								"{{hostURL}}"
							],
							"path": [
								"api",
								"v1",
								"carts"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Agregar Direccion de Envio",
			"item": [
				{
					"name": "TF078 - Exitoso",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Estado es 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									"const location = pm.response.headers.get(\"Location\");\r",
									"pm.test(`Header 'Location' correcto: ${location}`, function () {\r",
									"    pm.expect(location).to.match(/api\\/v1\\/addresses\\/\\d+$/);\r",
									"});\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"const url = pm.environment.get(\"hostURL\");\r",
									"\r",
									"pm.sendRequest({\r",
									"    url: `${url}/api/v1/tests/reset-functional-testing-db`,\r",
									"    method: 'GET',\r",
									"    header: {\r",
									"        'Content-Type': 'application/json'\r",
									"    },\r",
									"    body: {\r",
									"        mode: 'raw',\r",
									"        raw: JSON.stringify({}) \r",
									"    }\r",
									"}, function (err, res) {\r",
									"    pm.test(\"ResetDB es 204\", function () {\r",
									"        pm.expect(res).to.have.status(204);\r",
									"    });\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiIyIiwiaWF0IjoxNzM3OTQ3MTgyLCJleHAiOjE3NDU3MjMxODIsImF1dGhvcml0aWVzIjoiW1JPTEVfVVNFUl0ifQ.M1EQEBc6ycwxLs7Fyy7YyJhQAe19y1hBgxevNz8U78hhtMuReX3e-NOmzsx8i9zG",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"street\": \"Av. 15 de noviembre\",\r\n  \"city\": \"Tena\",\r\n  \"state\": \"Napo\",\r\n  \"mobileNumber\": \"+593960279073\",\r\n  \"reference\": \"Frente al tia\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{hostURL}}/api/v1/addresses",
							"host": [
								"{{hostURL}}"
							],
							"path": [
								"api",
								"v1",
								"addresses"
							]
						}
					},
					"response": []
				},
				{
					"name": "TF079 - No Autenticado",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Estado es 403\", function () {\r",
									"    pm.response.to.have.status(403);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"street\": \"Av. 15 de noviembre\",\r\n  \"city\": \"Tena\",\r\n  \"state\": \"Napo\",\r\n  \"mobileNumber\": \"+593960279073\",\r\n  \"reference\": \"Frente al tia\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{hostURL}}/api/v1/addresses",
							"host": [
								"{{hostURL}}"
							],
							"path": [
								"api",
								"v1",
								"addresses"
							]
						}
					},
					"response": []
				},
				{
					"name": "TF080 - No Habilitado",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Estado es 403\", function () {\r",
									"    pm.response.to.have.status(403);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiI0IiwiaWF0IjoxNzM3OTQ3MjgyLCJleHAiOjE3NDU3MjMyODIsImF1dGhvcml0aWVzIjoiW1JPTEVfU0VMTEVSXSJ9.Mopo1HjHmaqOXghXkUy2avG9Ki5G2hcUDOqAMAvwqJt_KINDqN6tmL2AaWJqaSSr",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"street\": \"Av. 15 de noviembre\",\r\n  \"city\": \"Tena\",\r\n  \"state\": \"Napo\",\r\n  \"mobileNumber\": \"+593960279073\",\r\n  \"reference\": \"Frente al tia\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{hostURL}}/api/v1/addresses",
							"host": [
								"{{hostURL}}"
							],
							"path": [
								"api",
								"v1",
								"addresses"
							]
						}
					},
					"response": []
				},
				{
					"name": "TF081 - Calle Invalida",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const msg = \"La calle proporcionada no puede estar en blanco\";\r",
									"\r",
									"pm.test(\"El header Content-Type es 'application/json'\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\", \"application/json\");\r",
									"});\r",
									"\r",
									"pm.test(\"Estado de la respuesta es 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(`Mensaje de error en el cuerpo de la respuesta es: ${msg}`, function () {\r",
									"    pm.expect(pm.response.json().message).eqls(msg);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiIyIiwiaWF0IjoxNzM3OTQ3MTgyLCJleHAiOjE3NDU3MjMxODIsImF1dGhvcml0aWVzIjoiW1JPTEVfVVNFUl0ifQ.M1EQEBc6ycwxLs7Fyy7YyJhQAe19y1hBgxevNz8U78hhtMuReX3e-NOmzsx8i9zG",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"street\": \"\",\r\n  \"city\": \"Tena\",\r\n  \"state\": \"Napo\",\r\n  \"mobileNumber\": \"+593960279073\",\r\n  \"reference\": \"Frente al tia\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{hostURL}}/api/v1/addresses",
							"host": [
								"{{hostURL}}"
							],
							"path": [
								"api",
								"v1",
								"addresses"
							]
						}
					},
					"response": []
				},
				{
					"name": "TF082 - Referencia Invalida",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const msg = \"La referencia proporcionada no puede estar en blanco\";\r",
									"\r",
									"pm.test(\"El header Content-Type es 'application/json'\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\", \"application/json\");\r",
									"});\r",
									"\r",
									"pm.test(\"Estado de la respuesta es 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(`Mensaje de error en el cuerpo de la respuesta es: ${msg}`, function () {\r",
									"    pm.expect(pm.response.json().message).eqls(msg);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiIyIiwiaWF0IjoxNzM3OTQ3MTgyLCJleHAiOjE3NDU3MjMxODIsImF1dGhvcml0aWVzIjoiW1JPTEVfVVNFUl0ifQ.M1EQEBc6ycwxLs7Fyy7YyJhQAe19y1hBgxevNz8U78hhtMuReX3e-NOmzsx8i9zG",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"street\": \"Av. 15 de Noviembre\",\r\n  \"city\": \"Tena\",\r\n  \"state\": \"Napo\",\r\n  \"mobileNumber\": \"+593960279073\",\r\n  \"reference\": \"\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{hostURL}}/api/v1/addresses",
							"host": [
								"{{hostURL}}"
							],
							"path": [
								"api",
								"v1",
								"addresses"
							]
						}
					},
					"response": []
				},
				{
					"name": "TF083 - Numero de Celular Invalido",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const msg = \"El n√∫mero de celular no cumple el formato esperado\";\r",
									"\r",
									"pm.test(\"El header Content-Type es 'application/json'\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\", \"application/json\");\r",
									"});\r",
									"\r",
									"pm.test(\"Estado de la respuesta es 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(`Mensaje de error en el cuerpo de la respuesta es: ${msg}`, function () {\r",
									"    pm.expect(pm.response.json().message).eqls(msg);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiIyIiwiaWF0IjoxNzM3OTQ3MTgyLCJleHAiOjE3NDU3MjMxODIsImF1dGhvcml0aWVzIjoiW1JPTEVfVVNFUl0ifQ.M1EQEBc6ycwxLs7Fyy7YyJhQAe19y1hBgxevNz8U78hhtMuReX3e-NOmzsx8i9zG",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"street\": \"Av. 15 de Noviembre\",\r\n  \"city\": \"Tena\",\r\n  \"state\": \"Napo\",\r\n  \"mobileNumber\": \"593960279073\",\r\n  \"reference\": \"frente al tia\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{hostURL}}/api/v1/addresses",
							"host": [
								"{{hostURL}}"
							],
							"path": [
								"api",
								"v1",
								"addresses"
							]
						}
					},
					"response": []
				},
				{
					"name": "TF084 - Provincia Incoherente",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const msg = \"La provincia proporcionada no le pertenece al pais proporcionado\";\r",
									"\r",
									"pm.test(\"El header Content-Type es 'application/json'\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\", \"application/json\");\r",
									"});\r",
									"\r",
									"pm.test(\"Estado de la respuesta es 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(`Mensaje de error en el cuerpo de la respuesta es: ${msg}`, function () {\r",
									"    pm.expect(pm.response.json().message).eqls(msg);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiIyIiwiaWF0IjoxNzM3OTQ3MTgyLCJleHAiOjE3NDU3MjMxODIsImF1dGhvcml0aWVzIjoiW1JPTEVfVVNFUl0ifQ.M1EQEBc6ycwxLs7Fyy7YyJhQAe19y1hBgxevNz8U78hhtMuReX3e-NOmzsx8i9zG",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"street\": \"Av. 15 de Noviembre\",\r\n  \"city\": \"Tena\",\r\n  \"state\": \"Pichincha\",\r\n  \"mobileNumber\": \"593960279073\",\r\n  \"reference\": \"frente al tia\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{hostURL}}/api/v1/addresses",
							"host": [
								"{{hostURL}}"
							],
							"path": [
								"api",
								"v1",
								"addresses"
							]
						}
					},
					"response": []
				},
				{
					"name": "TF085 - Ciudad Incoherente",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const msg = \"La ciudad proporcionada no le pertenece a la provincia proporcionada\";\r",
									"\r",
									"pm.test(\"El header Content-Type es 'application/json'\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\", \"application/json\");\r",
									"});\r",
									"\r",
									"pm.test(\"Estado de la respuesta es 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(`Mensaje de error en el cuerpo de la respuesta es: ${msg}`, function () {\r",
									"    pm.expect(pm.response.json().message).eqls(msg);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiIyIiwiaWF0IjoxNzM3OTQ3MTgyLCJleHAiOjE3NDU3MjMxODIsImF1dGhvcml0aWVzIjoiW1JPTEVfVVNFUl0ifQ.M1EQEBc6ycwxLs7Fyy7YyJhQAe19y1hBgxevNz8U78hhtMuReX3e-NOmzsx8i9zG",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"street\": \"Av. 15 de noviembre\",\r\n  \"city\": \"Quito\",\r\n  \"state\": \"Napo\",\r\n  \"mobileNumber\": \"+593960279073\",\r\n  \"reference\": \"Frente al tia\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{hostURL}}/api/v1/addresses",
							"host": [
								"{{hostURL}}"
							],
							"path": [
								"api",
								"v1",
								"addresses"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Eliminar Direccion de Envio",
			"item": [
				{
					"name": "TF086 - Exitoso",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Estado es 204\", function () {\r",
									"    pm.response.to.have.status(204);\r",
									"});\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"const url = pm.environment.get(\"hostURL\");\r",
									"\r",
									"pm.sendRequest({\r",
									"    url: `${url}/api/v1/tests/reset-functional-testing-db`,\r",
									"    method: 'GET',\r",
									"    header: {\r",
									"        'Content-Type': 'application/json'\r",
									"    },\r",
									"    body: {\r",
									"        mode: 'raw',\r",
									"        raw: JSON.stringify({}) \r",
									"    }\r",
									"}, function (err, res) {\r",
									"    pm.test(\"ResetDB es 204\", function () {\r",
									"        pm.expect(res).to.have.status(204);\r",
									"    });\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiIyIiwiaWF0IjoxNzM3OTQ3MTgyLCJleHAiOjE3NDU3MjMxODIsImF1dGhvcml0aWVzIjoiW1JPTEVfVVNFUl0ifQ.M1EQEBc6ycwxLs7Fyy7YyJhQAe19y1hBgxevNz8U78hhtMuReX3e-NOmzsx8i9zG",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{hostURL}}/api/v1/addresses/1",
							"host": [
								"{{hostURL}}"
							],
							"path": [
								"api",
								"v1",
								"addresses",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "TF087 - No Autenticado",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Estado es 403\", function () {\r",
									"    pm.response.to.have.status(403);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{hostURL}}/api/v1/addresses/1",
							"host": [
								"{{hostURL}}"
							],
							"path": [
								"api",
								"v1",
								"addresses",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "TF088 - No Habilitado",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Estado es 403\", function () {\r",
									"    pm.response.to.have.status(403);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiI0IiwiaWF0IjoxNzM3OTQ3MjgyLCJleHAiOjE3NDU3MjMyODIsImF1dGhvcml0aWVzIjoiW1JPTEVfU0VMTEVSXSJ9.Mopo1HjHmaqOXghXkUy2avG9Ki5G2hcUDOqAMAvwqJt_KINDqN6tmL2AaWJqaSSr",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{hostURL}}/api/v1/addresses/1",
							"host": [
								"{{hostURL}}"
							],
							"path": [
								"api",
								"v1",
								"addresses",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "TF089 - Direccion no le Pertenece",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const msg = \"Direcci√≥n de env√≠o no encontrada\";\r",
									"\r",
									"pm.test(\"El header Content-Type es 'application/json'\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\", \"application/json\");\r",
									"});\r",
									"\r",
									"pm.test(\"Estado de la respuesta es 404\", function () {\r",
									"    pm.response.to.have.status(404);\r",
									"});\r",
									"\r",
									"pm.test(`Mensaje de error en el cuerpo de la respuesta es: ${msg}`, function () {\r",
									"    pm.expect(pm.response.json().message).eqls(msg);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiIxIiwiaWF0IjoxNzM3OTQ3MTQyLCJleHAiOjE3NDU3MjMxNDIsImF1dGhvcml0aWVzIjoiW1JPTEVfU0VMTEVSXSJ9.sIha5dy8gg_u1Pmf4eixFJCdxci2MonOU7A4JxEztZ3Y7aG_k_OkVPBA7gduJY_v",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{hostURL}}/api/v1/addresses/1",
							"host": [
								"{{hostURL}}"
							],
							"path": [
								"api",
								"v1",
								"addresses",
								"1"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Obtener Direcciones de Envio",
			"item": [
				{
					"name": "TF090 - Exitoso",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"\r",
									"pm.test(\"Respuesta contiene aalmenos una direccion de envio\", function () {\r",
									"    pm.expect(pm.response.json()).to.be.an('array').with.lengthOf(1);\r",
									"});\r",
									"\r",
									"pm.test(\"Estado es 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiIyIiwiaWF0IjoxNzM3OTQ3MTgyLCJleHAiOjE3NDU3MjMxODIsImF1dGhvcml0aWVzIjoiW1JPTEVfVVNFUl0ifQ.M1EQEBc6ycwxLs7Fyy7YyJhQAe19y1hBgxevNz8U78hhtMuReX3e-NOmzsx8i9zG",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{hostURL}}/api/v1/addresses",
							"host": [
								"{{hostURL}}"
							],
							"path": [
								"api",
								"v1",
								"addresses"
							]
						}
					},
					"response": []
				},
				{
					"name": "TF091 - No Autenticado",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"\r",
									"pm.test(\"Estado es 403\", function () {\r",
									"    pm.response.to.have.status(403);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{hostURL}}/api/v1/addresses",
							"host": [
								"{{hostURL}}"
							],
							"path": [
								"api",
								"v1",
								"addresses"
							]
						}
					},
					"response": []
				},
				{
					"name": "TF092 - No Habilitado",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"\r",
									"pm.test(\"Estado es 403\", function () {\r",
									"    pm.response.to.have.status(403);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{hostURL}}/api/v1/addresses",
							"host": [
								"{{hostURL}}"
							],
							"path": [
								"api",
								"v1",
								"addresses"
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		}
	]
}